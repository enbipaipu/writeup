
flaghasher:     ファイル形式 elf64-x86-64


セクション .interp の逆アセンブル:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

セクション .note.gnu.property の逆アセンブル:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

セクション .note.gnu.build-id の逆アセンブル:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 c4                	add    %al,%ah
 369:	fb                   	sti    
 36a:	d0 7a 60             	sarb   0x60(%rdx)
 36d:	2b 45 70             	sub    0x70(%rbp),%eax
 370:	ab                   	stos   %eax,%es:(%rdi)
 371:	dc fe                	fdivr  %st,%st(6)
 373:	27                   	(bad)  
 374:	30 78 24             	xor    %bh,0x24(%rax)
 377:	7b dc                	jnp    355 <_init-0xcab>
 379:	96                   	xchg   %eax,%esi
 37a:	b5 b2                	mov    $0xb2,%ch

セクション .note.ABI-tag の逆アセンブル:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

セクション .gnu.hash の逆アセンブル:

00000000000003a0 <.gnu.hash>:
 3a0:	03 00                	add    (%rax),%eax
 3a2:	00 00                	add    %al,(%rax)
 3a4:	18 00                	sbb    %al,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 91 00 21 00 10    	add    %dl,0x10002100(%rcx)
 3b7:	00 18                	add    %bl,(%rax)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 1a                	add    %bl,(%rdx)
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 d0                	add    %dl,%al
 3c5:	65 ce                	gs (bad) 
 3c7:	6d                   	insl   (%dx),%es:(%rdi)
 3c8:	25 6d 0c 43 15       	and    $0x15430c6d,%eax
 3cd:	98                   	cwtl   
 3ce:	0c 43                	or     $0x43,%al

セクション .dynsym の逆アセンブル:

00000000000003d0 <.dynsym>:
	...
 3e8:	3d 01 00 00 12       	cmp    $0x12000001,%eax
	...
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
 403:	00 12                	add    %dl,(%rdx)
	...
 415:	00 00                	add    %al,(%rax)
 417:	00 cc                	add    %cl,%ah
 419:	01 00                	add    %eax,(%rax)
 41b:	00 12                	add    %dl,(%rdx)
	...
 42d:	00 00                	add    %al,(%rax)
 42f:	00 63 02             	add    %ah,0x2(%rbx)
 432:	00 00                	add    %al,(%rax)
 434:	12 00                	adc    (%rax),%al
	...
 446:	00 00                	add    %al,(%rax)
 448:	5c                   	pop    %rsp
 449:	02 00                	add    (%rax),%al
 44b:	00 12                	add    %dl,(%rdx)
	...
 45d:	00 00                	add    %al,(%rax)
 45f:	00 4f 02             	add    %cl,0x2(%rdi)
 462:	00 00                	add    %al,(%rax)
 464:	12 00                	adc    (%rax),%al
	...
 476:	00 00                	add    %al,(%rax)
 478:	7c 01                	jl     47b <_init-0xb85>
 47a:	00 00                	add    %al,(%rax)
 47c:	12 00                	adc    (%rax),%al
	...
 48e:	00 00                	add    %al,(%rax)
 490:	00 01                	add    %al,(%rcx)
 492:	00 00                	add    %al,(%rax)
 494:	12 00                	adc    (%rax),%al
	...
 4a6:	00 00                	add    %al,(%rax)
 4a8:	5f                   	pop    %rdi
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 12                	add    %dl,(%rdx)
	...
 4bd:	00 00                	add    %al,(%rax)
 4bf:	00 3e                	add    %bh,(%rsi)
 4c1:	02 00                	add    (%rax),%al
 4c3:	00 12                	add    %dl,(%rdx)
	...
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 a7 00 00 00 12    	add    %ah,0x12000000(%rdi)
	...
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 b4 01 00 00 12 00 	add    %dh,0x120000(%rcx,%rax,1)
	...
 506:	00 00                	add    %al,(%rax)
 508:	1b 01                	sbb    (%rcx),%eax
 50a:	00 00                	add    %al,(%rax)
 50c:	12 00                	adc    (%rax),%al
	...
 51e:	00 00                	add    %al,(%rax)
 520:	55                   	push   %rbp
 521:	00 00                	add    %al,(%rax)
 523:	00 12                	add    %dl,(%rdx)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 1f                	add    %bl,(%rdi)
 539:	00 00                	add    %al,(%rax)
 53b:	00 20                	add    %ah,(%rax)
	...
 54d:	00 00                	add    %al,(%rax)
 54f:	00 1e                	add    %bl,(%rsi)
 551:	02 00                	add    (%rax),%al
 553:	00 12                	add    %dl,(%rdx)
	...
 565:	00 00                	add    %al,(%rax)
 567:	00 30                	add    %dh,(%rax)
 569:	01 00                	add    %eax,(%rax)
 56b:	00 12                	add    %dl,(%rdx)
	...
 57d:	00 00                	add    %al,(%rax)
 57f:	00 78 02             	add    %bh,0x2(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	12 00                	adc    (%rax),%al
	...
 596:	00 00                	add    %al,(%rax)
 598:	7f 02                	jg     59c <_init-0xa64>
 59a:	00 00                	add    %al,(%rax)
 59c:	12 00                	adc    (%rax),%al
	...
 5ae:	00 00                	add    %al,(%rax)
 5b0:	10 00                	adc    %al,(%rax)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	20 00                	and    %al,(%rax)
	...
 5c6:	00 00                	add    %al,(%rax)
 5c8:	37                   	(bad)  
 5c9:	02 00                	add    (%rax),%al
 5cb:	00 12                	add    %dl,(%rdx)
	...
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 3b                	add    %bh,(%rbx)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 20                	add    %ah,(%rax)
	...
 5f5:	00 00                	add    %al,(%rax)
 5f7:	00 e8                	add    %ch,%al
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 12                	add    %dl,(%rdx)
	...
 60d:	00 00                	add    %al,(%rax)
 60f:	00 69 02             	add    %ch,0x2(%rcx)
 612:	00 00                	add    %al,(%rax)
 614:	22 00                	and    (%rax),%al
	...
 626:	00 00                	add    %al,(%rax)
 628:	11 01                	adc    %eax,(%rcx)
 62a:	00 00                	add    %al,(%rax)
 62c:	11 00                	adc    %eax,(%rax)
 62e:	1b 00                	sbb    (%rax),%eax
 630:	60                   	(bad)  
 631:	41 00 00             	add    %al,(%r8)
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	10 01                	adc    %al,(%rcx)
 63a:	00 00                	add    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	06                   	(bad)  
 641:	02 00                	add    (%rax),%al
 643:	00 11                	add    %dl,(%rcx)
 645:	00 1b                	add    %bl,(%rbx)
 647:	00 40 40             	add    %al,0x40(%rax)
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	10 01                	adc    %al,(%rcx)
 652:	00 00                	add    %al,(%rax)
 654:	00 00                	add    %al,(%rax)
	...

セクション .dynstr の逆アセンブル:

0000000000000658 <.dynstr>:
 658:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 65c:	73 74                	jae    6d2 <_init-0x92e>
 65e:	64 63 2b             	movsxd %fs:(%rbx),%ebp
 661:	2b 2e                	sub    (%rsi),%ebp
 663:	73 6f                	jae    6d4 <_init-0x92c>
 665:	2e 36 00 5f 5f       	cs ss add %bl,0x5f(%rdi)
 66a:	67 6d                	insl   (%dx),%es:(%edi)
 66c:	6f                   	outsl  %ds:(%rsi),(%dx)
 66d:	6e                   	outsb  %ds:(%rsi),(%dx)
 66e:	5f                   	pop    %rdi
 66f:	73 74                	jae    6e5 <_init-0x91b>
 671:	61                   	(bad)  
 672:	72 74                	jb     6e8 <_init-0x918>
 674:	5f                   	pop    %rdi
 675:	5f                   	pop    %rdi
 676:	00 5f 49             	add    %bl,0x49(%rdi)
 679:	54                   	push   %rsp
 67a:	4d 5f                	rex.WRB pop %r15
 67c:	64 65 72 65          	fs gs jb 6e5 <_init-0x91b>
 680:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 687:	4d 
 688:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 68a:	6f                   	outsl  %ds:(%rsi),(%dx)
 68b:	6e                   	outsb  %ds:(%rsi),(%dx)
 68c:	65 54                	gs push %rsp
 68e:	61                   	(bad)  
 68f:	62                   	(bad)  
 690:	6c                   	insb   (%dx),%es:(%rdi)
 691:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 695:	54                   	push   %rsp
 696:	4d 5f                	rex.WRB pop %r15
 698:	72 65                	jb     6ff <_init-0x901>
 69a:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 6a1:	4d 
 6a2:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 6a4:	6f                   	outsl  %ds:(%rsi),(%dx)
 6a5:	6e                   	outsb  %ds:(%rsi),(%dx)
 6a6:	65 54                	gs push %rsp
 6a8:	61                   	(bad)  
 6a9:	62                   	(bad)  
 6aa:	6c                   	insb   (%dx),%es:(%rdi)
 6ab:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 6af:	4e 53                	rex.WRX push %rbx
 6b1:	6f                   	outsl  %ds:(%rsi),(%dx)
 6b2:	6c                   	insb   (%dx),%es:(%rdi)
 6b3:	73 45                	jae    6fa <_init-0x906>
 6b5:	69 00 5f 5a 4e 53    	imul   $0x534e5a5f,(%rax),%eax
 6bb:	61                   	(bad)  
 6bc:	49 63 45 44          	movslq 0x44(%r13),%rax
 6c0:	31 45 76             	xor    %eax,0x76(%rbp)
 6c3:	00 5f 5a             	add    %bl,0x5a(%rdi)
 6c6:	53                   	push   %rbx
 6c7:	74 34                	je     6fd <_init-0x903>
 6c9:	65 6e                	outsb  %gs:(%rsi),(%dx)
 6cb:	64 6c                	fs insb (%dx),%es:(%rdi)
 6cd:	49 63 53 74          	movslq 0x74(%r11),%rdx
 6d1:	31 31                	xor    %esi,(%rcx)
 6d3:	63 68 61             	movsxd 0x61(%rax),%ebp
 6d6:	72 5f                	jb     737 <_init-0x8c9>
 6d8:	74 72                	je     74c <_init-0x8b4>
 6da:	61                   	(bad)  
 6db:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 6e2:	52 
 6e3:	53                   	push   %rbx
 6e4:	74 31                	je     717 <_init-0x8e9>
 6e6:	33 62 61             	xor    0x61(%rdx),%esp
 6e9:	73 69                	jae    754 <_init-0x8ac>
 6eb:	63 5f 6f             	movsxd 0x6f(%rdi),%ebx
 6ee:	73 74                	jae    764 <_init-0x89c>
 6f0:	72 65                	jb     757 <_init-0x8a9>
 6f2:	61                   	(bad)  
 6f3:	6d                   	insl   (%dx),%es:(%rdi)
 6f4:	49 54                	rex.WB push %r12
 6f6:	5f                   	pop    %rdi
 6f7:	54                   	push   %rsp
 6f8:	30 5f 45             	xor    %bl,0x45(%rdi)
 6fb:	53                   	push   %rbx
 6fc:	36 5f                	ss pop %rdi
 6fe:	00 5f 5a             	add    %bl,0x5a(%rdi)
 701:	4e 53                	rex.WRX push %rbx
 703:	74 37                	je     73c <_init-0x8c4>
 705:	5f                   	pop    %rdi
 706:	5f                   	pop    %rdi
 707:	63 78 78             	movsxd 0x78(%rax),%edi
 70a:	31 31                	xor    %esi,(%rcx)
 70c:	31 32                	xor    %esi,(%rdx)
 70e:	62 61                	(bad)  
 710:	73 69                	jae    77b <_init-0x885>
 712:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 715:	74 72                	je     789 <_init-0x877>
 717:	69 6e 67 49 63 53 74 	imul   $0x74536349,0x67(%rsi),%ebp
 71e:	31 31                	xor    %esi,(%rcx)
 720:	63 68 61             	movsxd 0x61(%rax),%ebp
 723:	72 5f                	jb     784 <_init-0x87c>
 725:	74 72                	je     799 <_init-0x867>
 727:	61                   	(bad)  
 728:	69 74 73 49 63 45 53 	imul   $0x61534563,0x49(%rbx,%rsi,2),%esi
 72f:	61 
 730:	49 63 45 45          	movslq 0x45(%r13),%rax
 734:	43 31 45 50          	rex.XB xor %eax,0x50(%r13)
 738:	4b 63 52 4b          	rex.WXB movslq 0x4b(%r10),%rdx
 73c:	53                   	push   %rbx
 73d:	33 5f 00             	xor    0x0(%rdi),%ebx
 740:	5f                   	pop    %rdi
 741:	5a                   	pop    %rdx
 742:	4e 53                	rex.WRX push %rbx
 744:	74 38                	je     77e <_init-0x882>
 746:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 74d:	65 34 49             	gs xor $0x49,%al
 750:	6e                   	outsb  %ds:(%rsi),(%dx)
 751:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%rsp,%rax,2),%esi
 758:	5f 
 759:	5a                   	pop    %rdx
 75a:	4e 53                	rex.WRX push %rbx
 75c:	6f                   	outsl  %ds:(%rsi),(%dx)
 75d:	6c                   	insb   (%dx),%es:(%rdi)
 75e:	73 45                	jae    7a5 <_init-0x85b>
 760:	50                   	push   %rax
 761:	46 52                	rex.RX push %rdx
 763:	53                   	push   %rbx
 764:	6f                   	outsl  %ds:(%rsi),(%dx)
 765:	53                   	push   %rbx
 766:	5f                   	pop    %rdi
 767:	45 00 5f 5a          	add    %r11b,0x5a(%r15)
 76b:	53                   	push   %rbx
 76c:	74 34                	je     7a2 <_init-0x85e>
 76e:	63 65 72             	movsxd 0x72(%rbp),%esp
 771:	72 00                	jb     773 <_init-0x88d>
 773:	5f                   	pop    %rdi
 774:	5f                   	pop    %rdi
 775:	67 78 78             	addr32 js 7f0 <_init-0x810>
 778:	5f                   	pop    %rdi
 779:	70 65                	jo     7e0 <_init-0x820>
 77b:	72 73                	jb     7f0 <_init-0x810>
 77d:	6f                   	outsl  %ds:(%rsi),(%dx)
 77e:	6e                   	outsb  %ds:(%rsi),(%dx)
 77f:	61                   	(bad)  
 780:	6c                   	insb   (%dx),%es:(%rdi)
 781:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%rcx,%rdi,2),%esi
 788:	5f 
 789:	5a                   	pop    %rdx
 78a:	4e 53                	rex.WRX push %rbx
 78c:	61                   	(bad)  
 78d:	49 63 45 43          	movslq 0x43(%r13),%rax
 791:	31 45 76             	xor    %eax,0x76(%rbp)
 794:	00 5f 5a             	add    %bl,0x5a(%rdi)
 797:	4e                   	rex.WRX
 798:	4b 53                	rex.WXB push %r11
 79a:	74 37                	je     7d3 <_init-0x82d>
 79c:	5f                   	pop    %rdi
 79d:	5f                   	pop    %rdi
 79e:	63 78 78             	movsxd 0x78(%rax),%edi
 7a1:	31 31                	xor    %esi,(%rcx)
 7a3:	31 32                	xor    %esi,(%rdx)
 7a5:	62 61                	(bad)  
 7a7:	73 69                	jae    812 <_init-0x7ee>
 7a9:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 7ac:	74 72                	je     820 <_init-0x7e0>
 7ae:	69 6e 67 49 63 53 74 	imul   $0x74536349,0x67(%rsi),%ebp
 7b5:	31 31                	xor    %esi,(%rcx)
 7b7:	63 68 61             	movsxd 0x61(%rax),%ebp
 7ba:	72 5f                	jb     81b <_init-0x7e5>
 7bc:	74 72                	je     830 <_init-0x7d0>
 7be:	61                   	(bad)  
 7bf:	69 74 73 49 63 45 53 	imul   $0x61534563,0x49(%rbx,%rsi,2),%esi
 7c6:	61 
 7c7:	49 63 45 45          	movslq 0x45(%r13),%rax
 7cb:	35 63 5f 73 74       	xor    $0x74735f63,%eax
 7d0:	72 45                	jb     817 <_init-0x7e9>
 7d2:	76 00                	jbe    7d4 <_init-0x82c>
 7d4:	5f                   	pop    %rdi
 7d5:	5a                   	pop    %rdx
 7d6:	53                   	push   %rbx
 7d7:	74 6c                	je     845 <_init-0x7bb>
 7d9:	73 49                	jae    824 <_init-0x7dc>
 7db:	53                   	push   %rbx
 7dc:	74 31                	je     80f <_init-0x7f1>
 7de:	31 63 68             	xor    %esp,0x68(%rbx)
 7e1:	61                   	(bad)  
 7e2:	72 5f                	jb     843 <_init-0x7bd>
 7e4:	74 72                	je     858 <_init-0x7a8>
 7e6:	61                   	(bad)  
 7e7:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
 7ee:	52 
 7ef:	53                   	push   %rbx
 7f0:	74 31                	je     823 <_init-0x7dd>
 7f2:	33 62 61             	xor    0x61(%rdx),%esp
 7f5:	73 69                	jae    860 <_init-0x7a0>
 7f7:	63 5f 6f             	movsxd 0x6f(%rdi),%ebx
 7fa:	73 74                	jae    870 <_init-0x790>
 7fc:	72 65                	jb     863 <_init-0x79d>
 7fe:	61                   	(bad)  
 7ff:	6d                   	insl   (%dx),%es:(%rdi)
 800:	49 63 54 5f 45       	movslq 0x45(%r15,%rbx,2),%rdx
 805:	53                   	push   %rbx
 806:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
 80b:	00 5f 5a             	add    %bl,0x5a(%rdi)
 80e:	4e 53                	rex.WRX push %rbx
 810:	74 38                	je     84a <_init-0x7b6>
 812:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
 819:	65 34 49             	gs xor $0x49,%al
 81c:	6e                   	outsb  %ds:(%rsi),(%dx)
 81d:	69 74 43 31 45 76 00 	imul   $0x5f007645,0x31(%rbx,%rax,2),%esi
 824:	5f 
 825:	5a                   	pop    %rdx
 826:	4e 53                	rex.WRX push %rbx
 828:	74 37                	je     861 <_init-0x79f>
 82a:	5f                   	pop    %rdi
 82b:	5f                   	pop    %rdi
 82c:	63 78 78             	movsxd 0x78(%rax),%edi
 82f:	31 31                	xor    %esi,(%rcx)
 831:	31 32                	xor    %esi,(%rdx)
 833:	62 61                	(bad)  
 835:	73 69                	jae    8a0 <_init-0x760>
 837:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 83a:	74 72                	je     8ae <_init-0x752>
 83c:	69 6e 67 49 63 53 74 	imul   $0x74536349,0x67(%rsi),%ebp
 843:	31 31                	xor    %esi,(%rcx)
 845:	63 68 61             	movsxd 0x61(%rax),%ebp
 848:	72 5f                	jb     8a9 <_init-0x757>
 84a:	74 72                	je     8be <_init-0x742>
 84c:	61                   	(bad)  
 84d:	69 74 73 49 63 45 53 	imul   $0x61534563,0x49(%rbx,%rsi,2),%esi
 854:	61 
 855:	49 63 45 45          	movslq 0x45(%r13),%rax
 859:	44 31 45 76          	xor    %r8d,0x76(%rbp)
 85d:	00 5f 5a             	add    %bl,0x5a(%rdi)
 860:	53                   	push   %rbx
 861:	74 34                	je     897 <_init-0x769>
 863:	63 6f 75             	movsxd 0x75(%rdi),%ebp
 866:	74 00                	je     868 <_init-0x798>
 868:	6c                   	insb   (%dx),%es:(%rdi)
 869:	69 62 67 63 63 5f 73 	imul   $0x735f6363,0x67(%rdx),%esp
 870:	2e 73 6f             	jae,pn 8e2 <_init-0x71e>
 873:	2e 31 00             	cs xor %eax,(%rax)
 876:	5f                   	pop    %rdi
 877:	55                   	push   %rbp
 878:	6e                   	outsb  %ds:(%rsi),(%dx)
 879:	77 69                	ja     8e4 <_init-0x71c>
 87b:	6e                   	outsb  %ds:(%rsi),(%dx)
 87c:	64 5f                	fs pop %rdi
 87e:	52                   	push   %rdx
 87f:	65 73 75             	gs jae 8f7 <_init-0x709>
 882:	6d                   	insl   (%dx),%es:(%rdi)
 883:	65 00 6c 69 62       	add    %ch,%gs:0x62(%rcx,%rbp,2)
 888:	63 2e                	movsxd (%rsi),%ebp
 88a:	73 6f                	jae    8fb <_init-0x705>
 88c:	2e 36 00 73 65       	cs ss add %dh,0x65(%rbx)
 891:	74 75                	je     908 <_init-0x6f8>
 893:	69 64 00 5f 5f 73 74 	imul   $0x6174735f,0x5f(%rax,%rax,1),%esp
 89a:	61 
 89b:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 89e:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 8a1:	5f                   	pop    %rdi
 8a2:	66 61                	data16 (bad) 
 8a4:	69 6c 00 5f 5f 63 78 	imul   $0x6178635f,0x5f(%rax,%rax,1),%ebp
 8ab:	61 
 8ac:	5f                   	pop    %rdi
 8ad:	61                   	(bad)  
 8ae:	74 65                	je     915 <_init-0x6eb>
 8b0:	78 69                	js     91b <_init-0x6e5>
 8b2:	74 00                	je     8b4 <_init-0x74c>
 8b4:	73 79                	jae    92f <_init-0x6d1>
 8b6:	73 74                	jae    92c <_init-0x6d4>
 8b8:	65 6d                	gs insl (%dx),%es:(%rdi)
 8ba:	00 73 6c             	add    %dh,0x6c(%rbx)
 8bd:	65 65 70 00          	gs gs jo 8c1 <_init-0x73f>
 8c1:	5f                   	pop    %rdi
 8c2:	5f                   	pop    %rdi
 8c3:	63 78 61             	movsxd 0x61(%rax),%edi
 8c6:	5f                   	pop    %rdi
 8c7:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 8cd:	7a 65                	jp     934 <_init-0x6cc>
 8cf:	00 73 65             	add    %dh,0x65(%rbx)
 8d2:	74 67                	je     93b <_init-0x6c5>
 8d4:	69 64 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%rax,%rax,1),%esp
 8db:	62 
 8dc:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 8df:	74 61                	je     942 <_init-0x6be>
 8e1:	72 74                	jb     957 <_init-0x6a9>
 8e3:	5f                   	pop    %rdi
 8e4:	6d                   	insl   (%dx),%es:(%rdi)
 8e5:	61                   	(bad)  
 8e6:	69 6e 00 47 43 43 5f 	imul   $0x5f434347,0x0(%rsi),%ebp
 8ed:	33 2e                	xor    (%rsi),%ebp
 8ef:	30 00                	xor    %al,(%rax)
 8f1:	47                   	rex.RXB
 8f2:	4c                   	rex.WR
 8f3:	49                   	rex.WB
 8f4:	42                   	rex.X
 8f5:	43 5f                	rex.XB pop %r15
 8f7:	32 2e                	xor    (%rsi),%ch
 8f9:	34 00                	xor    $0x0,%al
 8fb:	47                   	rex.RXB
 8fc:	4c                   	rex.WR
 8fd:	49                   	rex.WB
 8fe:	42                   	rex.X
 8ff:	43 5f                	rex.XB pop %r15
 901:	32 2e                	xor    (%rsi),%ch
 903:	32 2e                	xor    (%rsi),%ch
 905:	35 00 43 58 58       	xor    $0x58584300,%eax
 90a:	41                   	rex.B
 90b:	42                   	rex.X
 90c:	49 5f                	rex.WB pop %r15
 90e:	31 2e                	xor    %ebp,(%rsi)
 910:	33 00                	xor    (%rax),%eax
 912:	47                   	rex.RXB
 913:	4c                   	rex.WR
 914:	49                   	rex.WB
 915:	42                   	rex.X
 916:	43 58                	rex.XB pop %r8
 918:	58                   	pop    %rax
 919:	5f                   	pop    %rdi
 91a:	33 2e                	xor    (%rsi),%ebp
 91c:	34 00                	xor    $0x0,%al
 91e:	47                   	rex.RXB
 91f:	4c                   	rex.WR
 920:	49                   	rex.WB
 921:	42                   	rex.X
 922:	43 58                	rex.XB pop %r8
 924:	58                   	pop    %rax
 925:	5f                   	pop    %rdi
 926:	33 2e                	xor    (%rsi),%ebp
 928:	34 2e                	xor    $0x2e,%al
 92a:	32 31                	xor    (%rcx),%dh
	...

セクション .gnu.version の逆アセンブル:

000000000000092e <.gnu.version>:
 92e:	00 00                	add    %al,(%rax)
 930:	02 00                	add    (%rax),%al
 932:	04 00                	add    $0x0,%al
 934:	02 00                	add    (%rax),%al
 936:	03 00                	add    (%rax),%eax
 938:	03 00                	add    (%rax),%eax
 93a:	03 00                	add    (%rax),%eax
 93c:	04 00                	add    $0x0,%al
 93e:	04 00                	add    $0x0,%al
 940:	04 00                	add    $0x0,%al
 942:	05 00 02 00 04       	add    $0x4000200,%eax
 947:	00 06                	add    %al,(%rsi)
 949:	00 04 00             	add    %al,(%rax,%rax,1)
 94c:	00 00                	add    %al,(%rax)
 94e:	07                   	(bad)  
 94f:	00 04 00             	add    %al,(%rax,%rax,1)
 952:	03 00                	add    (%rax),%eax
 954:	03 00                	add    (%rax),%eax
 956:	00 00                	add    %al,(%rax)
 958:	03 00                	add    (%rax),%eax
 95a:	00 00                	add    %al,(%rax)
 95c:	04 00                	add    $0x0,%al
 95e:	03 00                	add    (%rax),%eax
 960:	04 00                	add    $0x0,%al
 962:	04 00                	add    $0x0,%al

セクション .gnu.version_r の逆アセンブル:

0000000000000968 <.gnu.version_r>:
 968:	01 00                	add    %eax,(%rax)
 96a:	01 00                	add    %eax,(%rax)
 96c:	10 02                	adc    %al,(%rdx)
 96e:	00 00                	add    %al,(%rax)
 970:	10 00                	adc    %al,(%rax)
 972:	00 00                	add    %al,(%rax)
 974:	20 00                	and    %al,(%rax)
 976:	00 00                	add    %al,(%rax)
 978:	50                   	push   %rax
 979:	26 79 0b             	es jns 987 <_init-0x679>
 97c:	00 00                	add    %al,(%rax)
 97e:	07                   	(bad)  
 97f:	00 91 02 00 00 00    	add    %dl,0x2(%rcx)
 985:	00 00                	add    %al,(%rax)
 987:	00 01                	add    %al,(%rcx)
 989:	00 02                	add    %al,(%rdx)
 98b:	00 2d 02 00 00 10    	add    %ch,0x10000002(%rip)        # 10000993 <_end+0xfffc71b>
 991:	00 00                	add    %al,(%rax)
 993:	00 30                	add    %dh,(%rax)
 995:	00 00                	add    %al,(%rax)
 997:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 99a:	69 0d 00 00 05 00 99 	imul   $0x299,0x50000(%rip),%ecx        # 509a4 <_end+0x4c72c>
 9a1:	02 00 00 
 9a4:	10 00                	adc    %al,(%rax)
 9a6:	00 00                	add    %al,(%rax)
 9a8:	75 1a                	jne    9c4 <_init-0x63c>
 9aa:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 9b0:	a3 02 00 00 00 00 00 	movabs %eax,0x100000000000002
 9b7:	00 01 
 9b9:	00 03                	add    %al,(%rbx)
 9bb:	00 01                	add    %al,(%rcx)
 9bd:	00 00                	add    %al,(%rax)
 9bf:	00 10                	add    %dl,(%rax)
 9c1:	00 00                	add    %al,(%rax)
 9c3:	00 00                	add    %al,(%rax)
 9c5:	00 00                	add    %al,(%rax)
 9c7:	00 d3                	add    %dl,%bl
 9c9:	af                   	scas   %es:(%rdi),%eax
 9ca:	6b 05 00 00 06 00 af 	imul   $0xffffffaf,0x60000(%rip),%eax        # 609d1 <_end+0x5c759>
 9d1:	02 00                	add    (%rax),%al
 9d3:	00 10                	add    %dl,(%rax)
 9d5:	00 00                	add    %al,(%rax)
 9d7:	00 74 29 92          	add    %dh,-0x6e(%rcx,%rbp,1)
 9db:	08 00                	or     %al,(%rax)
 9dd:	00 04 00             	add    %al,(%rax,%rax,1)
 9e0:	ba 02 00 00 10       	mov    $0x10000002,%edx
 9e5:	00 00                	add    %al,(%rax)
 9e7:	00 71 f8             	add    %dh,-0x8(%rcx)
 9ea:	97                   	xchg   %eax,%edi
 9eb:	02 00                	add    (%rax),%al
 9ed:	00 02                	add    %al,(%rdx)
 9ef:	00 c6                	add    %al,%dh
 9f1:	02 00                	add    (%rax),%al
 9f3:	00 00                	add    %al,(%rax)
 9f5:	00 00                	add    %al,(%rax)
	...

セクション .rela.dyn の逆アセンブル:

00000000000009f8 <.rela.dyn>:
 9f8:	08 3d 00 00 00 00    	or     %bh,0x0(%rip)        # 9fe <_init-0x602>
 9fe:	00 00                	add    %al,(%rax)
 a00:	08 00                	or     %al,(%rax)
 a02:	00 00                	add    %al,(%rax)
 a04:	00 00                	add    %al,(%rax)
 a06:	00 00                	add    %al,(%rax)
 a08:	20 13                	and    %dl,(%rbx)
 a0a:	00 00                	add    %al,(%rax)
 a0c:	00 00                	add    %al,(%rax)
 a0e:	00 00                	add    %al,(%rax)
 a10:	10 3d 00 00 00 00    	adc    %bh,0x0(%rip)        # a16 <_init-0x5ea>
 a16:	00 00                	add    %al,(%rax)
 a18:	08 00                	or     %al,(%rax)
 a1a:	00 00                	add    %al,(%rax)
 a1c:	00 00                	add    %al,(%rax)
 a1e:	00 00                	add    %al,(%rax)
 a20:	e4 14                	in     $0x14,%al
 a22:	00 00                	add    %al,(%rax)
 a24:	00 00                	add    %al,(%rax)
 a26:	00 00                	add    %al,(%rax)
 a28:	18 3d 00 00 00 00    	sbb    %bh,0x0(%rip)        # a2e <_init-0x5d2>
 a2e:	00 00                	add    %al,(%rax)
 a30:	08 00                	or     %al,(%rax)
 a32:	00 00                	add    %al,(%rax)
 a34:	00 00                	add    %al,(%rax)
 a36:	00 00                	add    %al,(%rax)
 a38:	e0 12                	loopne a4c <_init-0x5b4>
 a3a:	00 00                	add    %al,(%rax)
 a3c:	00 00                	add    %al,(%rax)
 a3e:	00 00                	add    %al,(%rax)
 a40:	08 40 00             	or     %al,0x0(%rax)
 a43:	00 00                	add    %al,(%rax)
 a45:	00 00                	add    %al,(%rax)
 a47:	00 08                	add    %cl,(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 00                	add    %al,(%rax)
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 08                	add    %cl,(%rax)
 a51:	40 00 00             	rex add %al,(%rax)
 a54:	00 00                	add    %al,(%rax)
 a56:	00 00                	add    %al,(%rax)
 a58:	c8 3f 00 00          	enter  $0x3f,$0x0
 a5c:	00 00                	add    %al,(%rax)
 a5e:	00 00                	add    %al,(%rax)
 a60:	06                   	(bad)  
 a61:	00 00                	add    %al,(%rax)
 a63:	00 18                	add    %bl,(%rax)
	...
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 d0                	add    %dl,%al
 a71:	3f                   	(bad)  
 a72:	00 00                	add    %al,(%rax)
 a74:	00 00                	add    %al,(%rax)
 a76:	00 00                	add    %al,(%rax)
 a78:	06                   	(bad)  
 a79:	00 00                	add    %al,(%rax)
 a7b:	00 02                	add    %al,(%rdx)
	...
 a85:	00 00                	add    %al,(%rax)
 a87:	00 d8                	add    %bl,%al
 a89:	3f                   	(bad)  
 a8a:	00 00                	add    %al,(%rax)
 a8c:	00 00                	add    %al,(%rax)
 a8e:	00 00                	add    %al,(%rax)
 a90:	06                   	(bad)  
 a91:	00 00                	add    %al,(%rax)
 a93:	00 0f                	add    %cl,(%rdi)
	...
 a9d:	00 00                	add    %al,(%rax)
 a9f:	00 e0                	add    %ah,%al
 aa1:	3f                   	(bad)  
 aa2:	00 00                	add    %al,(%rax)
 aa4:	00 00                	add    %al,(%rax)
 aa6:	00 00                	add    %al,(%rax)
 aa8:	06                   	(bad)  
 aa9:	00 00                	add    %al,(%rax)
 aab:	00 13                	add    %dl,(%rbx)
	...
 ab5:	00 00                	add    %al,(%rax)
 ab7:	00 e8                	add    %ch,%al
 ab9:	3f                   	(bad)  
 aba:	00 00                	add    %al,(%rax)
 abc:	00 00                	add    %al,(%rax)
 abe:	00 00                	add    %al,(%rax)
 ac0:	06                   	(bad)  
 ac1:	00 00                	add    %al,(%rax)
 ac3:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
 ace:	00 00                	add    %al,(%rax)
 ad0:	f0 3f                	lock (bad) 
 ad2:	00 00                	add    %al,(%rax)
 ad4:	00 00                	add    %al,(%rax)
 ad6:	00 00                	add    %al,(%rax)
 ad8:	06                   	(bad)  
 ad9:	00 00                	add    %al,(%rax)
 adb:	00 16                	add    %dl,(%rsi)
	...
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 f8                	add    %bh,%al
 ae9:	3f                   	(bad)  
 aea:	00 00                	add    %al,(%rax)
 aec:	00 00                	add    %al,(%rax)
 aee:	00 00                	add    %al,(%rax)
 af0:	06                   	(bad)  
 af1:	00 00                	add    %al,(%rax)
 af3:	00 17                	add    %dl,(%rdi)
	...
 afd:	00 00                	add    %al,(%rax)
 aff:	00 10                	add    %dl,(%rax)
 b01:	40 00 00             	rex add %al,(%rax)
 b04:	00 00                	add    %al,(%rax)
 b06:	00 00                	add    %al,(%rax)
 b08:	01 00                	add    %eax,(%rax)
 b0a:	00 00                	add    %al,(%rax)
 b0c:	0d 00 00 00 00       	or     $0x0,%eax
 b11:	00 00                	add    %al,(%rax)
 b13:	00 00                	add    %al,(%rax)
 b15:	00 00                	add    %al,(%rax)
 b17:	00 40 40             	add    %al,0x40(%rax)
 b1a:	00 00                	add    %al,(%rax)
 b1c:	00 00                	add    %al,(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	05 00 00 00 1a       	add    $0x1a000000,%eax
	...
 b2d:	00 00                	add    %al,(%rax)
 b2f:	00 60 41             	add    %ah,0x41(%rax)
 b32:	00 00                	add    %al,(%rax)
 b34:	00 00                	add    %al,(%rax)
 b36:	00 00                	add    %al,(%rax)
 b38:	05 00 00 00 19       	add    $0x19000000,%eax
	...

セクション .rela.plt の逆アセンブル:

0000000000000b48 <.rela.plt>:
 b48:	48 3f                	rex.W (bad) 
 b4a:	00 00                	add    %al,(%rax)
 b4c:	00 00                	add    %al,(%rax)
 b4e:	00 00                	add    %al,(%rax)
 b50:	07                   	(bad)  
 b51:	00 00                	add    %al,(%rax)
 b53:	00 01                	add    %al,(%rcx)
	...
 b5d:	00 00                	add    %al,(%rax)
 b5f:	00 50 3f             	add    %dl,0x3f(%rax)
 b62:	00 00                	add    %al,(%rax)
 b64:	00 00                	add    %al,(%rax)
 b66:	00 00                	add    %al,(%rax)
 b68:	07                   	(bad)  
 b69:	00 00                	add    %al,(%rax)
 b6b:	00 03                	add    %al,(%rbx)
	...
 b75:	00 00                	add    %al,(%rax)
 b77:	00 58 3f             	add    %bl,0x3f(%rax)
 b7a:	00 00                	add    %al,(%rax)
 b7c:	00 00                	add    %al,(%rax)
 b7e:	00 00                	add    %al,(%rax)
 b80:	07                   	(bad)  
 b81:	00 00                	add    %al,(%rax)
 b83:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 b8e:	00 00                	add    %al,(%rax)
 b90:	60                   	(bad)  
 b91:	3f                   	(bad)  
 b92:	00 00                	add    %al,(%rax)
 b94:	00 00                	add    %al,(%rax)
 b96:	00 00                	add    %al,(%rax)
 b98:	07                   	(bad)  
 b99:	00 00                	add    %al,(%rax)
 b9b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # ba1 <_init-0x45f>
 ba1:	00 00                	add    %al,(%rax)
 ba3:	00 00                	add    %al,(%rax)
 ba5:	00 00                	add    %al,(%rax)
 ba7:	00 68 3f             	add    %ch,0x3f(%rax)
 baa:	00 00                	add    %al,(%rax)
 bac:	00 00                	add    %al,(%rax)
 bae:	00 00                	add    %al,(%rax)
 bb0:	07                   	(bad)  
 bb1:	00 00                	add    %al,(%rax)
 bb3:	00 06                	add    %al,(%rsi)
	...
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 70 3f             	add    %dh,0x3f(%rax)
 bc2:	00 00                	add    %al,(%rax)
 bc4:	00 00                	add    %al,(%rax)
 bc6:	00 00                	add    %al,(%rax)
 bc8:	07                   	(bad)  
 bc9:	00 00                	add    %al,(%rax)
 bcb:	00 07                	add    %al,(%rdi)
	...
 bd5:	00 00                	add    %al,(%rax)
 bd7:	00 78 3f             	add    %bh,0x3f(%rax)
 bda:	00 00                	add    %al,(%rax)
 bdc:	00 00                	add    %al,(%rax)
 bde:	00 00                	add    %al,(%rax)
 be0:	07                   	(bad)  
 be1:	00 00                	add    %al,(%rax)
 be3:	00 08                	add    %cl,(%rax)
	...
 bed:	00 00                	add    %al,(%rax)
 bef:	00 80 3f 00 00 00    	add    %al,0x3f(%rax)
 bf5:	00 00                	add    %al,(%rax)
 bf7:	00 07                	add    %al,(%rdi)
 bf9:	00 00                	add    %al,(%rax)
 bfb:	00 09                	add    %cl,(%rcx)
	...
 c05:	00 00                	add    %al,(%rax)
 c07:	00 88 3f 00 00 00    	add    %cl,0x3f(%rax)
 c0d:	00 00                	add    %al,(%rax)
 c0f:	00 07                	add    %al,(%rdi)
 c11:	00 00                	add    %al,(%rax)
 c13:	00 0a                	add    %cl,(%rdx)
	...
 c1d:	00 00                	add    %al,(%rax)
 c1f:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
 c25:	00 00                	add    %al,(%rax)
 c27:	00 07                	add    %al,(%rdi)
 c29:	00 00                	add    %al,(%rax)
 c2b:	00 0b                	add    %cl,(%rbx)
	...
 c35:	00 00                	add    %al,(%rax)
 c37:	00 98 3f 00 00 00    	add    %bl,0x3f(%rax)
 c3d:	00 00                	add    %al,(%rax)
 c3f:	00 07                	add    %al,(%rdi)
 c41:	00 00                	add    %al,(%rax)
 c43:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 c4e:	00 00                	add    %al,(%rax)
 c50:	a0 3f 00 00 00 00 00 	movabs 0x70000000000003f,%al
 c57:	00 07 
 c59:	00 00                	add    %al,(%rax)
 c5b:	00 0e                	add    %cl,(%rsi)
	...
 c65:	00 00                	add    %al,(%rax)
 c67:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 c6d:	00 00                	add    %al,(%rax)
 c6f:	00 07                	add    %al,(%rdi)
 c71:	00 00                	add    %al,(%rax)
 c73:	00 10                	add    %dl,(%rax)
	...
 c7d:	00 00                	add    %al,(%rax)
 c7f:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 c85:	00 00                	add    %al,(%rax)
 c87:	00 07                	add    %al,(%rdi)
 c89:	00 00                	add    %al,(%rax)
 c8b:	00 11                	add    %dl,(%rcx)
	...
 c95:	00 00                	add    %al,(%rax)
 c97:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 c9d:	00 00                	add    %al,(%rax)
 c9f:	00 07                	add    %al,(%rdi)
 ca1:	00 00                	add    %al,(%rax)
 ca3:	00 12                	add    %dl,(%rdx)
	...
 cad:	00 00                	add    %al,(%rax)
 caf:	00 c0                	add    %al,%al
 cb1:	3f                   	(bad)  
 cb2:	00 00                	add    %al,(%rax)
 cb4:	00 00                	add    %al,(%rax)
 cb6:	00 00                	add    %al,(%rax)
 cb8:	07                   	(bad)  
 cb9:	00 00                	add    %al,(%rax)
 cbb:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # cc1 <_init-0x33f>
 cc1:	00 00                	add    %al,(%rax)
 cc3:	00 00                	add    %al,(%rax)
 cc5:	00 00                	add    %al,(%rax)
	...

セクション .init の逆アセンブル:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

セクション .plt の逆アセンブル:

0000000000001020 <.plt>:
    1020:	ff 35 12 2f 00 00    	push   0x2f12(%rip)        # 3f38 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 13 2f 00 00 	bnd jmp *0x2f13(%rip)        # 3f40 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	push   $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmp 1020 <.plt>
    112f:	90                   	nop

セクション .plt.got の逆アセンブル:

0000000000001130 <__cxa_finalize@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 8d 2e 00 00 	bnd jmp *0x2e8d(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

セクション .plt.sec の逆アセンブル:

0000000000001140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 fd 2d 00 00 	bnd jmp *0x2dfd(%rip)        # 3f48 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 f5 2d 00 00 	bnd jmp *0x2df5(%rip)        # 3f50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <sleep@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 ed 2d 00 00 	bnd jmp *0x2ded(%rip)        # 3f58 <sleep@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <system@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 e5 2d 00 00 	bnd jmp *0x2de5(%rip)        # 3f60 <system@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <__cxa_atexit@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 dd 2d 00 00 	bnd jmp *0x2ddd(%rip)        # 3f68 <__cxa_atexit@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 d5 2d 00 00 	bnd jmp *0x2dd5(%rip)        # 3f70 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <_ZNSolsEPFRSoS_E@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 cd 2d 00 00 	bnd jmp *0x2dcd(%rip)        # 3f78 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <_ZNSaIcED1Ev@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 c5 2d 00 00 	bnd jmp *0x2dc5(%rip)        # 3f80 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <__stack_chk_fail@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 bd 2d 00 00 	bnd jmp *0x2dbd(%rip)        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 b5 2d 00 00 	bnd jmp *0x2db5(%rip)        # 3f90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@GLIBCXX_3.4.21>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <_ZNSt8ios_base4InitC1Ev@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 ad 2d 00 00 	bnd jmp *0x2dad(%rip)        # 3f98 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <_ZNSolsEi@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 a5 2d 00 00 	bnd jmp *0x2da5(%rip)        # 3fa0 <_ZNSolsEi@GLIBCXX_3.4>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <_Unwind_Resume@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 9d 2d 00 00 	bnd jmp *0x2d9d(%rip)        # 3fa8 <_Unwind_Resume@GCC_3.0>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <_ZNSaIcEC1Ev@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 95 2d 00 00 	bnd jmp *0x2d95(%rip)        # 3fb0 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <setgid@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 8d 2d 00 00 	bnd jmp *0x2d8d(%rip)        # 3fb8 <setgid@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <setuid@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 85 2d 00 00 	bnd jmp *0x2d85(%rip)        # 3fc0 <setuid@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

セクション .text の逆アセンブル:

0000000000001240 <_start>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	31 ed                	xor    %ebp,%ebp
    1246:	49 89 d1             	mov    %rdx,%r9
    1249:	5e                   	pop    %rsi
    124a:	48 89 e2             	mov    %rsp,%rdx
    124d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1251:	50                   	push   %rax
    1252:	54                   	push   %rsp
    1253:	4c 8d 05 16 03 00 00 	lea    0x316(%rip),%r8        # 1570 <__libc_csu_fini>
    125a:	48 8d 0d 9f 02 00 00 	lea    0x29f(%rip),%rcx        # 1500 <__libc_csu_init>
    1261:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1329 <main>
    1268:	ff 15 72 2d 00 00    	call   *0x2d72(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    126e:	f4                   	hlt    
    126f:	90                   	nop

0000000000001270 <deregister_tm_clones>:
    1270:	48 8d 3d a1 2d 00 00 	lea    0x2da1(%rip),%rdi        # 4018 <__TMC_END__>
    1277:	48 8d 05 9a 2d 00 00 	lea    0x2d9a(%rip),%rax        # 4018 <__TMC_END__>
    127e:	48 39 f8             	cmp    %rdi,%rax
    1281:	74 15                	je     1298 <deregister_tm_clones+0x28>
    1283:	48 8b 05 4e 2d 00 00 	mov    0x2d4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    128a:	48 85 c0             	test   %rax,%rax
    128d:	74 09                	je     1298 <deregister_tm_clones+0x28>
    128f:	ff e0                	jmp    *%rax
    1291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1298:	c3                   	ret    
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012a0 <register_tm_clones>:
    12a0:	48 8d 3d 71 2d 00 00 	lea    0x2d71(%rip),%rdi        # 4018 <__TMC_END__>
    12a7:	48 8d 35 6a 2d 00 00 	lea    0x2d6a(%rip),%rsi        # 4018 <__TMC_END__>
    12ae:	48 29 fe             	sub    %rdi,%rsi
    12b1:	48 89 f0             	mov    %rsi,%rax
    12b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    12b8:	48 c1 f8 03          	sar    $0x3,%rax
    12bc:	48 01 c6             	add    %rax,%rsi
    12bf:	48 d1 fe             	sar    %rsi
    12c2:	74 14                	je     12d8 <register_tm_clones+0x38>
    12c4:	48 8b 05 25 2d 00 00 	mov    0x2d25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    12cb:	48 85 c0             	test   %rax,%rax
    12ce:	74 08                	je     12d8 <register_tm_clones+0x38>
    12d0:	ff e0                	jmp    *%rax
    12d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12d8:	c3                   	ret    
    12d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012e0 <__do_global_dtors_aux>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	80 3d 85 2f 00 00 00 	cmpb   $0x0,0x2f85(%rip)        # 4270 <completed.8061>
    12eb:	75 2b                	jne    1318 <__do_global_dtors_aux+0x38>
    12ed:	55                   	push   %rbp
    12ee:	48 83 3d d2 2c 00 00 	cmpq   $0x0,0x2cd2(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    12f5:	00 
    12f6:	48 89 e5             	mov    %rsp,%rbp
    12f9:	74 0c                	je     1307 <__do_global_dtors_aux+0x27>
    12fb:	48 8b 3d 06 2d 00 00 	mov    0x2d06(%rip),%rdi        # 4008 <__dso_handle>
    1302:	e8 29 fe ff ff       	call   1130 <__cxa_finalize@plt>
    1307:	e8 64 ff ff ff       	call   1270 <deregister_tm_clones>
    130c:	c6 05 5d 2f 00 00 01 	movb   $0x1,0x2f5d(%rip)        # 4270 <completed.8061>
    1313:	5d                   	pop    %rbp
    1314:	c3                   	ret    
    1315:	0f 1f 00             	nopl   (%rax)
    1318:	c3                   	ret    
    1319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001320 <frame_dummy>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	e9 77 ff ff ff       	jmp    12a0 <register_tm_clones>

0000000000001329 <main>:
    1329:	f3 0f 1e fa          	endbr64 
    132d:	55                   	push   %rbp
    132e:	48 89 e5             	mov    %rsp,%rbp
    1331:	53                   	push   %rbx
    1332:	48 83 ec 48          	sub    $0x48,%rsp
    1336:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    133d:	00 00 
    133f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1343:	31 c0                	xor    %eax,%eax
    1345:	48 8d 35 c4 0c 00 00 	lea    0xcc4(%rip),%rsi        # 2010 <_ZStL19piecewise_construct+0x8>
    134c:	48 8d 3d ed 2c 00 00 	lea    0x2ced(%rip),%rdi        # 4040 <_ZSt4cout@GLIBCXX_3.4>
    1353:	e8 38 fe ff ff       	call   1190 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1358:	48 89 c2             	mov    %rax,%rdx
    135b:	48 8b 05 6e 2c 00 00 	mov    0x2c6e(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1362:	48 89 c6             	mov    %rax,%rsi
    1365:	48 89 d7             	mov    %rdx,%rdi
    1368:	e8 33 fe ff ff       	call   11a0 <_ZNSolsEPFRSoS_E@plt>
    136d:	48 89 c2             	mov    %rax,%rdx
    1370:	48 8b 05 59 2c 00 00 	mov    0x2c59(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1377:	48 89 c6             	mov    %rax,%rsi
    137a:	48 89 d7             	mov    %rdx,%rdi
    137d:	e8 1e fe ff ff       	call   11a0 <_ZNSolsEPFRSoS_E@plt>
    1382:	bf 02 00 00 00       	mov    $0x2,%edi
    1387:	e8 d4 fd ff ff       	call   1160 <sleep@plt>
    138c:	48 8d 45 bb          	lea    -0x45(%rbp),%rax
    1390:	48 89 c7             	mov    %rax,%rdi
    1393:	e8 78 fe ff ff       	call   1210 <_ZNSaIcEC1Ev@plt>
    1398:	48 8d 55 bb          	lea    -0x45(%rbp),%rdx
    139c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13a0:	48 8d 35 99 0c 00 00 	lea    0xc99(%rip),%rsi        # 2040 <_ZStL19piecewise_construct+0x38>
    13a7:	48 89 c7             	mov    %rax,%rdi
    13aa:	e8 21 fe ff ff       	call   11d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt>
    13af:	48 8d 45 bb          	lea    -0x45(%rbp),%rax
    13b3:	48 89 c7             	mov    %rax,%rdi
    13b6:	e8 f5 fd ff ff       	call   11b0 <_ZNSaIcED1Ev@plt>
    13bb:	bf 00 00 00 00       	mov    $0x0,%edi
    13c0:	e8 5b fe ff ff       	call   1220 <setgid@plt>
    13c5:	bf 00 00 00 00       	mov    $0x0,%edi
    13ca:	e8 61 fe ff ff       	call   1230 <setuid@plt>
    13cf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13d3:	48 89 c7             	mov    %rax,%rdi
    13d6:	e8 65 fd ff ff       	call   1140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    13db:	48 89 c7             	mov    %rax,%rdi
    13de:	e8 8d fd ff ff       	call   1170 <system@plt>
    13e3:	89 45 bc             	mov    %eax,-0x44(%rbp)
    13e6:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    13ea:	74 3f                	je     142b <main+0x102>
    13ec:	48 8d 35 75 0c 00 00 	lea    0xc75(%rip),%rsi        # 2068 <_ZStL19piecewise_construct+0x60>
    13f3:	48 8d 3d 66 2d 00 00 	lea    0x2d66(%rip),%rdi        # 4160 <_ZSt4cerr@GLIBCXX_3.4>
    13fa:	e8 91 fd ff ff       	call   1190 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    13ff:	48 89 c2             	mov    %rax,%rdx
    1402:	8b 45 bc             	mov    -0x44(%rbp),%eax
    1405:	89 c6                	mov    %eax,%esi
    1407:	48 89 d7             	mov    %rdx,%rdi
    140a:	e8 e1 fd ff ff       	call   11f0 <_ZNSolsEi@plt>
    140f:	48 89 c2             	mov    %rax,%rdx
    1412:	48 8b 05 b7 2b 00 00 	mov    0x2bb7(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1419:	48 89 c6             	mov    %rax,%rsi
    141c:	48 89 d7             	mov    %rdx,%rdi
    141f:	e8 7c fd ff ff       	call   11a0 <_ZNSolsEPFRSoS_E@plt>
    1424:	bb 01 00 00 00       	mov    $0x1,%ebx
    1429:	eb 05                	jmp    1430 <main+0x107>
    142b:	bb 00 00 00 00       	mov    $0x0,%ebx
    1430:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    1434:	48 89 c7             	mov    %rax,%rdi
    1437:	e8 14 fd ff ff       	call   1150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    143c:	89 d8                	mov    %ebx,%eax
    143e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1442:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1449:	00 00 
    144b:	74 43                	je     1490 <main+0x167>
    144d:	eb 3c                	jmp    148b <main+0x162>
    144f:	f3 0f 1e fa          	endbr64 
    1453:	48 89 c3             	mov    %rax,%rbx
    1456:	48 8d 45 bb          	lea    -0x45(%rbp),%rax
    145a:	48 89 c7             	mov    %rax,%rdi
    145d:	e8 4e fd ff ff       	call   11b0 <_ZNSaIcED1Ev@plt>
    1462:	48 89 d8             	mov    %rbx,%rax
    1465:	48 89 c7             	mov    %rax,%rdi
    1468:	e8 93 fd ff ff       	call   1200 <_Unwind_Resume@plt>
    146d:	f3 0f 1e fa          	endbr64 
    1471:	48 89 c3             	mov    %rax,%rbx
    1474:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    1478:	48 89 c7             	mov    %rax,%rdi
    147b:	e8 d0 fc ff ff       	call   1150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    1480:	48 89 d8             	mov    %rbx,%rax
    1483:	48 89 c7             	mov    %rax,%rdi
    1486:	e8 75 fd ff ff       	call   1200 <_Unwind_Resume@plt>
    148b:	e8 30 fd ff ff       	call   11c0 <__stack_chk_fail@plt>
    1490:	48 83 c4 48          	add    $0x48,%rsp
    1494:	5b                   	pop    %rbx
    1495:	5d                   	pop    %rbp
    1496:	c3                   	ret    

0000000000001497 <_Z41__static_initialization_and_destruction_0ii>:
    1497:	f3 0f 1e fa          	endbr64 
    149b:	55                   	push   %rbp
    149c:	48 89 e5             	mov    %rsp,%rbp
    149f:	48 83 ec 10          	sub    $0x10,%rsp
    14a3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    14a6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    14a9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    14ad:	75 32                	jne    14e1 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    14af:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    14b6:	75 29                	jne    14e1 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    14b8:	48 8d 3d b2 2d 00 00 	lea    0x2db2(%rip),%rdi        # 4271 <_ZStL8__ioinit>
    14bf:	e8 1c fd ff ff       	call   11e0 <_ZNSt8ios_base4InitC1Ev@plt>
    14c4:	48 8d 15 3d 2b 00 00 	lea    0x2b3d(%rip),%rdx        # 4008 <__dso_handle>
    14cb:	48 8d 35 9f 2d 00 00 	lea    0x2d9f(%rip),%rsi        # 4271 <_ZStL8__ioinit>
    14d2:	48 8b 05 1f 2b 00 00 	mov    0x2b1f(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    14d9:	48 89 c7             	mov    %rax,%rdi
    14dc:	e8 9f fc ff ff       	call   1180 <__cxa_atexit@plt>
    14e1:	90                   	nop
    14e2:	c9                   	leave  
    14e3:	c3                   	ret    

00000000000014e4 <_GLOBAL__sub_I_main>:
    14e4:	f3 0f 1e fa          	endbr64 
    14e8:	55                   	push   %rbp
    14e9:	48 89 e5             	mov    %rsp,%rbp
    14ec:	be ff ff 00 00       	mov    $0xffff,%esi
    14f1:	bf 01 00 00 00       	mov    $0x1,%edi
    14f6:	e8 9c ff ff ff       	call   1497 <_Z41__static_initialization_and_destruction_0ii>
    14fb:	5d                   	pop    %rbp
    14fc:	c3                   	ret    
    14fd:	0f 1f 00             	nopl   (%rax)

0000000000001500 <__libc_csu_init>:
    1500:	f3 0f 1e fa          	endbr64 
    1504:	41 57                	push   %r15
    1506:	4c 8d 3d fb 27 00 00 	lea    0x27fb(%rip),%r15        # 3d08 <__frame_dummy_init_array_entry>
    150d:	41 56                	push   %r14
    150f:	49 89 d6             	mov    %rdx,%r14
    1512:	41 55                	push   %r13
    1514:	49 89 f5             	mov    %rsi,%r13
    1517:	41 54                	push   %r12
    1519:	41 89 fc             	mov    %edi,%r12d
    151c:	55                   	push   %rbp
    151d:	48 8d 2d f4 27 00 00 	lea    0x27f4(%rip),%rbp        # 3d18 <__do_global_dtors_aux_fini_array_entry>
    1524:	53                   	push   %rbx
    1525:	4c 29 fd             	sub    %r15,%rbp
    1528:	48 83 ec 08          	sub    $0x8,%rsp
    152c:	e8 cf fa ff ff       	call   1000 <_init>
    1531:	48 c1 fd 03          	sar    $0x3,%rbp
    1535:	74 1f                	je     1556 <__libc_csu_init+0x56>
    1537:	31 db                	xor    %ebx,%ebx
    1539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1540:	4c 89 f2             	mov    %r14,%rdx
    1543:	4c 89 ee             	mov    %r13,%rsi
    1546:	44 89 e7             	mov    %r12d,%edi
    1549:	41 ff 14 df          	call   *(%r15,%rbx,8)
    154d:	48 83 c3 01          	add    $0x1,%rbx
    1551:	48 39 dd             	cmp    %rbx,%rbp
    1554:	75 ea                	jne    1540 <__libc_csu_init+0x40>
    1556:	48 83 c4 08          	add    $0x8,%rsp
    155a:	5b                   	pop    %rbx
    155b:	5d                   	pop    %rbp
    155c:	41 5c                	pop    %r12
    155e:	41 5d                	pop    %r13
    1560:	41 5e                	pop    %r14
    1562:	41 5f                	pop    %r15
    1564:	c3                   	ret    
    1565:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    156c:	00 00 00 00 

0000000000001570 <__libc_csu_fini>:
    1570:	f3 0f 1e fa          	endbr64 
    1574:	c3                   	ret    

セクション .fini の逆アセンブル:

0000000000001578 <_fini>:
    1578:	f3 0f 1e fa          	endbr64 
    157c:	48 83 ec 08          	sub    $0x8,%rsp
    1580:	48 83 c4 08          	add    $0x8,%rsp
    1584:	c3                   	ret    

セクション .rodata の逆アセンブル:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
	...

0000000000002008 <_ZStL19piecewise_construct>:
	...
    2010:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    2012:	6d                   	insl   (%dx),%es:(%rdi)
    2013:	70 75                	jo     208a <_ZStL19piecewise_construct+0x82>
    2015:	74 69                	je     2080 <_ZStL19piecewise_construct+0x78>
    2017:	6e                   	outsb  %ds:(%rsi),(%dx)
    2018:	67 20 74 68 65       	and    %dh,0x65(%eax,%ebp,2)
    201d:	20 4d 44             	and    %cl,0x44(%rbp)
    2020:	35 20 68 61 73       	xor    $0x73616820,%eax
    2025:	68 20 6f 66 20       	push   $0x20666f20
    202a:	2f                   	(bad)  
    202b:	72 6f                	jb     209c <__GNU_EH_FRAME_HDR+0x4>
    202d:	6f                   	outsl  %ds:(%rsi),(%dx)
    202e:	74 2f                	je     205f <_ZStL19piecewise_construct+0x57>
    2030:	66 6c                	data16 insb (%dx),%es:(%rdi)
    2032:	61                   	(bad)  
    2033:	67 2e 74 78          	addr32 je,pn 20af <__GNU_EH_FRAME_HDR+0x17>
    2037:	74 2e                	je     2067 <_ZStL19piecewise_construct+0x5f>
    2039:	2e 2e 2e 20 00       	cs cs cs and %al,(%rax)
    203e:	00 00                	add    %al,(%rax)
    2040:	2f                   	(bad)  
    2041:	62                   	(bad)  
    2042:	69 6e 2f 62 61 73 68 	imul   $0x68736162,0x2f(%rsi),%ebp
    2049:	20 2d 63 20 27 6d    	and    %ch,0x6d272063(%rip)        # 6d2740b2 <_end+0x6d26fe3a>
    204f:	64 35 73 75 6d 20    	fs xor $0x206d7573,%eax
    2055:	2f                   	(bad)  
    2056:	72 6f                	jb     20c7 <__GNU_EH_FRAME_HDR+0x2f>
    2058:	6f                   	outsl  %ds:(%rsi),(%dx)
    2059:	74 2f                	je     208a <_ZStL19piecewise_construct+0x82>
    205b:	66 6c                	data16 insb (%dx),%es:(%rdi)
    205d:	61                   	(bad)  
    205e:	67 2e 74 78          	addr32 je,pn 20da <__GNU_EH_FRAME_HDR+0x42>
    2062:	74 27                	je     208b <_ZStL19piecewise_construct+0x83>
    2064:	00 00                	add    %al,(%rax)
    2066:	00 00                	add    %al,(%rax)
    2068:	45 72 72             	rex.RB jb 20dd <__GNU_EH_FRAME_HDR+0x45>
    206b:	6f                   	outsl  %ds:(%rsi),(%dx)
    206c:	72 3a                	jb     20a8 <__GNU_EH_FRAME_HDR+0x10>
    206e:	20 73 79             	and    %dh,0x79(%rbx)
    2071:	73 74                	jae    20e7 <__GNU_EH_FRAME_HDR+0x4f>
    2073:	65 6d                	gs insl (%dx),%es:(%rdi)
    2075:	28 29                	sub    %ch,(%rcx)
    2077:	20 63 61             	and    %ah,0x61(%rbx)
    207a:	6c                   	insb   (%dx),%es:(%rdi)
    207b:	6c                   	insb   (%dx),%es:(%rdi)
    207c:	20 72 65             	and    %dh,0x65(%rdx)
    207f:	74 75                	je     20f6 <__GNU_EH_FRAME_HDR+0x5e>
    2081:	72 6e                	jb     20f1 <__GNU_EH_FRAME_HDR+0x59>
    2083:	65 64 20 6e 6f       	gs and %ch,%fs:0x6f(%rsi)
    2088:	6e                   	outsb  %ds:(%rsi),(%dx)
    2089:	2d 7a 65 72 6f       	sub    $0x6f72657a,%eax
    208e:	20 76 61             	and    %dh,0x61(%rsi)
    2091:	6c                   	insb   (%dx),%es:(%rdi)
    2092:	75 65                	jne    20f9 <__GNU_EH_FRAME_HDR+0x61>
    2094:	3a 20                	cmp    (%rax),%ah
	...

セクション .eh_frame_hdr の逆アセンブル:

0000000000002098 <__GNU_EH_FRAME_HDR>:
    2098:	01 1b                	add    %ebx,(%rbx)
    209a:	03 3b                	add    (%rbx),%edi
    209c:	54                   	push   %rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 09                	add    %cl,(%rcx)
    20a1:	00 00                	add    %al,(%rax)
    20a3:	00 88 ef ff ff 88    	add    %cl,-0x77000011(%rax)
    20a9:	00 00                	add    %al,(%rax)
    20ab:	00 98 f0 ff ff b0    	add    %bl,-0x4f000010(%rax)
    20b1:	00 00                	add    %al,(%rax)
    20b3:	00 a8 f0 ff ff c8    	add    %ch,-0x37000010(%rax)
    20b9:	00 00                	add    %al,(%rax)
    20bb:	00 a8 f1 ff ff 70    	add    %ch,0x70fffff1(%rax)
    20c1:	00 00                	add    %al,(%rax)
    20c3:	00 91 f2 ff ff 00    	add    %dl,0xfffff2(%rcx)
    20c9:	01 00                	add    %eax,(%rax)
    20cb:	00 ff                	add    %bh,%bh
    20cd:	f3 ff                	repz (bad) 
    20cf:	ff 28                	ljmp   *(%rax)
    20d1:	01 00                	add    %eax,(%rax)
    20d3:	00 4c f4 ff          	add    %cl,-0x1(%rsp,%rsi,8)
    20d7:	ff 48 01             	decl   0x1(%rax)
    20da:	00 00                	add    %al,(%rax)
    20dc:	68 f4 ff ff 68       	push   $0x68fffff4
    20e1:	01 00                	add    %eax,(%rax)
    20e3:	00 d8                	add    %bl,%al
    20e5:	f4                   	hlt    
    20e6:	ff                   	(bad)  
    20e7:	ff                   	.byte 0xff
    20e8:	b0 01                	mov    $0x1,%al
	...

セクション .eh_frame の逆アセンブル:

00000000000020f0 <__FRAME_END__-0x16c>:
    20f0:	14 00                	adc    $0x0,%al
    20f2:	00 00                	add    %al,(%rax)
    20f4:	00 00                	add    %al,(%rax)
    20f6:	00 00                	add    %al,(%rax)
    20f8:	01 7a 52             	add    %edi,0x52(%rdx)
    20fb:	00 01                	add    %al,(%rcx)
    20fd:	78 10                	js     210f <__GNU_EH_FRAME_HDR+0x77>
    20ff:	01 1b                	add    %ebx,(%rbx)
    2101:	0c 07                	or     $0x7,%al
    2103:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2109:	00 00                	add    %al,(%rax)
    210b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    210e:	00 00                	add    %al,(%rax)
    2110:	30 f1                	xor    %dh,%cl
    2112:	ff                   	(bad)  
    2113:	ff 2f                	ljmp   *(%rdi)
    2115:	00 00                	add    %al,(%rax)
    2117:	00 00                	add    %al,(%rax)
    2119:	44 07                	rex.R (bad) 
    211b:	10 00                	adc    %al,(%rax)
    211d:	00 00                	add    %al,(%rax)
    211f:	00 24 00             	add    %ah,(%rax,%rax,1)
    2122:	00 00                	add    %al,(%rax)
    2124:	34 00                	xor    $0x0,%al
    2126:	00 00                	add    %al,(%rax)
    2128:	f8                   	clc    
    2129:	ee                   	out    %al,(%dx)
    212a:	ff                   	(bad)  
    212b:	ff 10                	call   *(%rax)
    212d:	01 00                	add    %eax,(%rax)
    212f:	00 00                	add    %al,(%rax)
    2131:	0e                   	(bad)  
    2132:	10 46 0e             	adc    %al,0xe(%rsi)
    2135:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2138:	0b 77 08             	or     0x8(%rdi),%esi
    213b:	80 00 3f             	addb   $0x3f,(%rax)
    213e:	1a 3a                	sbb    (%rdx),%bh
    2140:	2a 33                	sub    (%rbx),%dh
    2142:	24 22                	and    $0x22,%al
    2144:	00 00                	add    %al,(%rax)
    2146:	00 00                	add    %al,(%rax)
    2148:	14 00                	adc    $0x0,%al
    214a:	00 00                	add    %al,(%rax)
    214c:	5c                   	pop    %rsp
    214d:	00 00                	add    %al,(%rax)
    214f:	00 e0                	add    %ah,%al
    2151:	ef                   	out    %eax,(%dx)
    2152:	ff                   	(bad)  
    2153:	ff 10                	call   *(%rax)
	...
    215d:	00 00                	add    %al,(%rax)
    215f:	00 14 00             	add    %dl,(%rax,%rax,1)
    2162:	00 00                	add    %al,(%rax)
    2164:	74 00                	je     2166 <__GNU_EH_FRAME_HDR+0xce>
    2166:	00 00                	add    %al,(%rax)
    2168:	d8 ef                	fsubr  %st(7),%st
    216a:	ff                   	(bad)  
    216b:	ff 00                	incl   (%rax)
    216d:	01 00                	add    %eax,(%rax)
	...
    2177:	00 1c 00             	add    %bl,(%rax,%rax,1)
    217a:	00 00                	add    %al,(%rax)
    217c:	00 00                	add    %al,(%rax)
    217e:	00 00                	add    %al,(%rax)
    2180:	01 7a 50             	add    %edi,0x50(%rdx)
    2183:	4c 52                	rex.WR push %rdx
    2185:	00 01                	add    %al,(%rcx)
    2187:	78 10                	js     2199 <__GNU_EH_FRAME_HDR+0x101>
    2189:	07                   	(bad)  
    218a:	9b                   	fwait
    218b:	85 1e                	test   %ebx,(%rsi)
    218d:	00 00                	add    %al,(%rax)
    218f:	1b 1b                	sbb    (%rbx),%ebx
    2191:	0c 07                	or     $0x7,%al
    2193:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2199:	00 00                	add    %al,(%rax)
    219b:	00 24 00             	add    %ah,(%rax,%rax,1)
    219e:	00 00                	add    %al,(%rax)
    21a0:	89 f1                	mov    %esi,%ecx
    21a2:	ff                   	(bad)  
    21a3:	ff 6e 01             	ljmp   *0x1(%rsi)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	04 b7                	add    $0xb7,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	00 45 0e             	add    %al,0xe(%rbp)
    21af:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21b5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    21b9:	60                   	(bad)  
    21ba:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    21bd:	08 00                	or     %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	d4                   	(bad)  
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 cf                	add    %cl,%bh
    21c9:	f2 ff                	repnz (bad) 
    21cb:	ff 4d 00             	decl   0x0(%rbp)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 45 0e             	add    %al,0xe(%rbp)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 44 0c 07          	add    0x7(%rsp,%rcx,1),%al
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	f4                   	hlt    
    21e5:	00 00                	add    %al,(%rax)
    21e7:	00 fc                	add    %bh,%ah
    21e9:	f2 ff                	repnz (bad) 
    21eb:	ff 19                	lcall  *(%rcx)
    21ed:	00 00                	add    %al,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	45 0e                	rex.RB (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	50                   	push   %rax
    21fa:	0c 07                	or     $0x7,%al
    21fc:	08 00                	or     %al,(%rax)
    21fe:	00 00                	add    %al,(%rax)
    2200:	44 00 00             	add    %r8b,(%rax)
    2203:	00 14 01             	add    %dl,(%rcx,%rax,1)
    2206:	00 00                	add    %al,(%rax)
    2208:	f8                   	clc    
    2209:	f2 ff                	repnz (bad) 
    220b:	ff 65 00             	jmp    *0x0(%rbp)
    220e:	00 00                	add    %al,(%rax)
    2210:	00 46 0e             	add    %al,0xe(%rsi)
    2213:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2219:	8e 03                	mov    (%rbx),%es
    221b:	45 0e                	rex.RB (bad) 
    221d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2223:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630306d <_end+0xffffffff862fedf5>
    2229:	06                   	(bad)  
    222a:	48 0e                	rex.W (bad) 
    222c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2232:	6e                   	outsb  %ds:(%rsi),(%dx)
    2233:	0e                   	(bad)  
    2234:	38 41 0e             	cmp    %al,0xe(%rcx)
    2237:	30 41 0e             	xor    %al,0xe(%rcx)
    223a:	28 42 0e             	sub    %al,0xe(%rdx)
    223d:	20 42 0e             	and    %al,0xe(%rdx)
    2240:	18 42 0e             	sbb    %al,0xe(%rdx)
    2243:	10 42 0e             	adc    %al,0xe(%rdx)
    2246:	08 00                	or     %al,(%rax)
    2248:	10 00                	adc    %al,(%rax)
    224a:	00 00                	add    %al,(%rax)
    224c:	5c                   	pop    %rsp
    224d:	01 00                	add    %eax,(%rax)
    224f:	00 20                	add    %ah,(%rax)
    2251:	f3 ff                	repz (bad) 
    2253:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2259 <__GNU_EH_FRAME_HDR+0x1c1>
    2259:	00 00                	add    %al,(%rax)
	...

000000000000225c <__FRAME_END__>:
    225c:	00 00                	add    %al,(%rax)
	...

セクション .gcc_except_table の逆アセンブル:

0000000000002260 <.gcc_except_table>:
    2260:	ff                   	(bad)  
    2261:	ff 01                	incl   (%rcx)
    2263:	15 2a 39 00 00       	adc    $0x392a,%eax
    2268:	81 01 05 a6 02 00    	addl   $0x2a605,(%rcx)
    226e:	b5 01                	mov    $0x1,%ch
    2270:	46 c4 02 00 bf       	(bad)
    2275:	02 23                	add    (%rbx),%ah
	...

セクション .init_array の逆アセンブル:

0000000000003d08 <__frame_dummy_init_array_entry>:
    3d08:	20 13                	and    %dl,(%rbx)
    3d0a:	00 00                	add    %al,(%rax)
    3d0c:	00 00                	add    %al,(%rax)
    3d0e:	00 00                	add    %al,(%rax)
    3d10:	e4 14                	in     $0x14,%al
    3d12:	00 00                	add    %al,(%rax)
    3d14:	00 00                	add    %al,(%rax)
	...

セクション .fini_array の逆アセンブル:

0000000000003d18 <__do_global_dtors_aux_fini_array_entry>:
    3d18:	e0 12                	loopne 3d2c <_DYNAMIC+0xc>
    3d1a:	00 00                	add    %al,(%rax)
    3d1c:	00 00                	add    %al,(%rax)
	...

セクション .dynamic の逆アセンブル:

0000000000003d20 <_DYNAMIC>:
    3d20:	01 00                	add    %eax,(%rax)
    3d22:	00 00                	add    %al,(%rax)
    3d24:	00 00                	add    %al,(%rax)
    3d26:	00 00                	add    %al,(%rax)
    3d28:	01 00                	add    %eax,(%rax)
    3d2a:	00 00                	add    %al,(%rax)
    3d2c:	00 00                	add    %al,(%rax)
    3d2e:	00 00                	add    %al,(%rax)
    3d30:	01 00                	add    %eax,(%rax)
    3d32:	00 00                	add    %al,(%rax)
    3d34:	00 00                	add    %al,(%rax)
    3d36:	00 00                	add    %al,(%rax)
    3d38:	10 02                	adc    %al,(%rdx)
    3d3a:	00 00                	add    %al,(%rax)
    3d3c:	00 00                	add    %al,(%rax)
    3d3e:	00 00                	add    %al,(%rax)
    3d40:	01 00                	add    %eax,(%rax)
    3d42:	00 00                	add    %al,(%rax)
    3d44:	00 00                	add    %al,(%rax)
    3d46:	00 00                	add    %al,(%rax)
    3d48:	2d 02 00 00 00       	sub    $0x2,%eax
    3d4d:	00 00                	add    %al,(%rax)
    3d4f:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3d52:	00 00                	add    %al,(%rax)
    3d54:	00 00                	add    %al,(%rax)
    3d56:	00 00                	add    %al,(%rax)
    3d58:	00 10                	add    %dl,(%rax)
    3d5a:	00 00                	add    %al,(%rax)
    3d5c:	00 00                	add    %al,(%rax)
    3d5e:	00 00                	add    %al,(%rax)
    3d60:	0d 00 00 00 00       	or     $0x0,%eax
    3d65:	00 00                	add    %al,(%rax)
    3d67:	00 78 15             	add    %bh,0x15(%rax)
    3d6a:	00 00                	add    %al,(%rax)
    3d6c:	00 00                	add    %al,(%rax)
    3d6e:	00 00                	add    %al,(%rax)
    3d70:	19 00                	sbb    %eax,(%rax)
    3d72:	00 00                	add    %al,(%rax)
    3d74:	00 00                	add    %al,(%rax)
    3d76:	00 00                	add    %al,(%rax)
    3d78:	08 3d 00 00 00 00    	or     %bh,0x0(%rip)        # 3d7e <_DYNAMIC+0x5e>
    3d7e:	00 00                	add    %al,(%rax)
    3d80:	1b 00                	sbb    (%rax),%eax
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
    3d86:	00 00                	add    %al,(%rax)
    3d88:	10 00                	adc    %al,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	1a 00                	sbb    (%rax),%al
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	18 3d 00 00 00 00    	sbb    %bh,0x0(%rip)        # 3d9e <_DYNAMIC+0x7e>
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	1c 00                	sbb    $0x0,%al
    3da2:	00 00                	add    %al,(%rax)
    3da4:	00 00                	add    %al,(%rax)
    3da6:	00 00                	add    %al,(%rax)
    3da8:	08 00                	or     %al,(%rax)
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	f5                   	cmc    
    3db1:	fe                   	(bad)  
    3db2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3db5:	00 00                	add    %al,(%rax)
    3db7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3dc5 <_DYNAMIC+0xa5>
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 58 06             	add    %bl,0x6(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	06                   	(bad)  
    3dd1:	00 00                	add    %al,(%rax)
    3dd3:	00 00                	add    %al,(%rax)
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 d0                	add    %dl,%al
    3dd9:	03 00                	add    (%rax),%eax
    3ddb:	00 00                	add    %al,(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 0a                	add    %cl,(%rdx)
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 d5                	add    %dl,%ch
    3de9:	02 00                	add    (%rax),%al
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 0b                	add    %cl,(%rbx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 18                	add    %bl,(%rax)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e05 <_DYNAMIC+0xe5>
	...
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 03                	add    %al,(%rbx)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 30                	add    %dh,(%rax)
    3e19:	3f                   	(bad)  
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	02 00                	add    (%rax),%al
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	80 01 00             	addb   $0x0,(%rcx)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 14 00             	add    %dl,(%rax,%rax,1)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	07                   	(bad)  
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 17                	add    %dl,(%rdi)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 48 0b             	add    %cl,0xb(%rax)
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	07                   	(bad)  
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 f8                	add    %bh,%al
    3e59:	09 00                	or     %eax,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 08                	add    %cl,(%rax)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 50 01             	add    %dl,0x1(%rax)
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	09 00                	or     %eax,(%rax)
    3e72:	00 00                	add    %al,(%rax)
    3e74:	00 00                	add    %al,(%rax)
    3e76:	00 00                	add    %al,(%rax)
    3e78:	18 00                	sbb    %al,(%rax)
    3e7a:	00 00                	add    %al,(%rax)
    3e7c:	00 00                	add    %al,(%rax)
    3e7e:	00 00                	add    %al,(%rax)
    3e80:	1e                   	(bad)  
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 08                	add    %cl,(%rax)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 fb                	add    %bh,%bl
    3e91:	ff                   	(bad)  
    3e92:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 01                	add    %al,(%rcx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	08 00                	or     %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 fe                	add    %bh,%dh
    3ea1:	ff                   	(bad)  
    3ea2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 68 09             	add    %ch,0x9(%rax)
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	ff                   	(bad)  
    3eb1:	ff                   	(bad)  
    3eb2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 03                	add    %al,(%rbx)
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 f0                	add    %dh,%al
    3ec1:	ff                   	(bad)  
    3ec2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 2e                	add    %ch,(%rsi)
    3ec9:	09 00                	or     %eax,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 f9                	add    %bh,%cl
    3ed1:	ff                   	(bad)  
    3ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 04 00             	add    %al,(%rax,%rax,1)
	...

セクション .got の逆アセンブル:

0000000000003f30 <_GLOBAL_OFFSET_TABLE_>:
    3f30:	20 3d 00 00 00 00    	and    %bh,0x0(%rip)        # 3f36 <_GLOBAL_OFFSET_TABLE_+0x6>
	...
    3f46:	00 00                	add    %al,(%rax)
    3f48:	30 10                	xor    %dl,(%rax)
    3f4a:	00 00                	add    %al,(%rax)
    3f4c:	00 00                	add    %al,(%rax)
    3f4e:	00 00                	add    %al,(%rax)
    3f50:	40 10 00             	rex adc %al,(%rax)
    3f53:	00 00                	add    %al,(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 50 10             	add    %dl,0x10(%rax)
    3f5a:	00 00                	add    %al,(%rax)
    3f5c:	00 00                	add    %al,(%rax)
    3f5e:	00 00                	add    %al,(%rax)
    3f60:	60                   	(bad)  
    3f61:	10 00                	adc    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 70 10             	add    %dh,0x10(%rax)
    3f6a:	00 00                	add    %al,(%rax)
    3f6c:	00 00                	add    %al,(%rax)
    3f6e:	00 00                	add    %al,(%rax)
    3f70:	80 10 00             	adcb   $0x0,(%rax)
    3f73:	00 00                	add    %al,(%rax)
    3f75:	00 00                	add    %al,(%rax)
    3f77:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    3f85:	00 00                	add    %al,(%rax)
    3f87:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
    3f8d:	00 00                	add    %al,(%rax)
    3f8f:	00 c0                	add    %al,%al
    3f91:	10 00                	adc    %al,(%rax)
    3f93:	00 00                	add    %al,(%rax)
    3f95:	00 00                	add    %al,(%rax)
    3f97:	00 d0                	add    %dl,%al
    3f99:	10 00                	adc    %al,(%rax)
    3f9b:	00 00                	add    %al,(%rax)
    3f9d:	00 00                	add    %al,(%rax)
    3f9f:	00 e0                	add    %ah,%al
    3fa1:	10 00                	adc    %al,(%rax)
    3fa3:	00 00                	add    %al,(%rax)
    3fa5:	00 00                	add    %al,(%rax)
    3fa7:	00 f0                	add    %dh,%al
    3fa9:	10 00                	adc    %al,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 00                	add    %al,(%rax)
    3fb1:	11 00                	adc    %eax,(%rax)
    3fb3:	00 00                	add    %al,(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 10                	add    %dl,(%rax)
    3fb9:	11 00                	adc    %eax,(%rax)
    3fbb:	00 00                	add    %al,(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 20                	add    %ah,(%rax)
    3fc1:	11 00                	adc    %eax,(%rax)
	...

セクション .data の逆アセンブル:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

0000000000004010 <DW.ref.__gxx_personality_v0>:
	...

セクション .bss の逆アセンブル:

0000000000004040 <_ZSt4cout@@GLIBCXX_3.4>:
	...

0000000000004160 <_ZSt4cerr@@GLIBCXX_3.4>:
	...

0000000000004270 <completed.8061>:
	...

0000000000004271 <_ZStL8__ioinit>:
    4271:	00 00                	add    %al,(%rax)
    4273:	00 00                	add    %al,(%rax)
    4275:	00 00                	add    %al,(%rax)
	...

セクション .comment の逆アセンブル:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x756232d0>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
