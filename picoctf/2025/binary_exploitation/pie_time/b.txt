
vuln:     ファイル形式 elf64-x86-64


セクション .interp の逆アセンブル:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

セクション .note.gnu.property の逆アセンブル:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

セクション .note.gnu.build-id の逆アセンブル:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 00                	add    %al,(%rax)
 369:	72 41                	jb     3ac <_init-0xc54>
 36b:	3e 1b 5a 06          	ds sbb 0x6(%rdx),%ebx
 36f:	13 21                	adc    (%rcx),%esp
 371:	9f                   	lahf   
 372:	45 51                	rex.RB push %r9
 374:	8d                   	(bad)  
 375:	ed                   	in     (%dx),%eax
 376:	05 fc 68 5b 68       	add    $0x685b68fc,%eax
 37b:	0a                   	.byte 0xa

セクション .note.ABI-tag の逆アセンブル:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

セクション .gnu.hash の逆アセンブル:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	10 00                	adc    %al,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 01 10    	add    %al,0x10010000(%rcx)
 3b7:	00 10                	add    %dl,(%rax)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 28                	add    %ch,(%rax)
 3c1:	1d 8c 1c d1 65       	sbb    $0x65d11c8c,%eax
 3c6:	ce                   	(bad)  
 3c7:	6d                   	insl   (%dx),%es:(%rdi)

セクション .dynsym の逆アセンブル:

00000000000003c8 <.dynsym>:
	...
 3e0:	42 00 00             	rex.X add %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 ae 00 00 00 20    	add    %ch,0x20000000(%rsi)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 2c 00             	add    %ch,(%rax,%rax,1)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	5e                   	pop    %rsi
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 31                	add    %dh,(%rcx)
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 4a 00             	add    %cl,0x0(%rdx)
 45a:	00 00                	add    %al,(%rax)
 45c:	12 00                	adc    (%rax),%al
	...
 46e:	00 00                	add    %al,(%rax)
 470:	51                   	push   %rcx
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 48b:	00 12                	add    %dl,(%rdx)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 25 00 00 00 12    	add    %ah,0x12000000(%rip)        # 120004a5 <_end+0x11ffc485>
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 ca                	add    %cl,%dl
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 20                	add    %ah,(%rax)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 4d3:	00 12                	add    %dl,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 10                	add    %dl,(%rax)
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 12                	add    %dl,(%rdx)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 16                	add    %dl,(%rsi)
 501:	00 00                	add    %al,(%rax)
 503:	00 12                	add    %dl,(%rdx)
	...
 515:	00 00                	add    %al,(%rax)
 517:	00 0b                	add    %cl,(%rbx)
 519:	00 00                	add    %al,(%rax)
 51b:	00 12                	add    %dl,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d9                	add    %bl,%cl
 531:	00 00                	add    %al,(%rax)
 533:	00 20                	add    %ah,(%rax)
	...
 545:	00 00                	add    %al,(%rax)
 547:	00 57 00             	add    %dl,0x0(%rdi)
 54a:	00 00                	add    %al,(%rax)
 54c:	11 00                	adc    %eax,(%rax)
 54e:	1a 00                	sbb    (%rax),%al
 550:	10 40 00             	adc    %al,0x0(%rax)
 553:	00 00                	add    %al,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 08                	add    %cl,(%rax)
 559:	00 00                	add    %al,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 65 00             	add    %ah,0x0(%rbp)
 562:	00 00                	add    %al,(%rax)
 564:	22 00                	and    (%rax),%al
	...

セクション .dynstr の逆アセンブル:

0000000000000578 <.dynstr>:
 578:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 57c:	63 2e                	movsxd (%rsi),%ebp
 57e:	73 6f                	jae    5ef <_init-0xa11>
 580:	2e 36 00 65 78       	cs ss add %ah,0x78(%rbp)
 585:	69 74 00 66 6f 70 65 	imul   $0x6e65706f,0x66(%rax,%rax,1),%esi
 58c:	6e 
 58d:	00 5f 5f             	add    %bl,0x5f(%rdi)
 590:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 597:	73 63                	jae    5fc <_init-0xa04>
 599:	61                   	(bad)  
 59a:	6e                   	outsb  %ds:(%rsi),(%dx)
 59b:	66 00 73 69          	data16 add %dh,0x69(%rbx)
 59f:	67 6e                	outsb  %ds:(%esi),(%dx)
 5a1:	61                   	(bad)  
 5a2:	6c                   	insb   (%dx),%es:(%rdi)
 5a3:	00 70 75             	add    %dh,0x75(%rax)
 5a6:	74 73                	je     61b <_init-0x9e5>
 5a8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5ab:	73 74                	jae    621 <_init-0x9df>
 5ad:	61                   	(bad)  
 5ae:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 5b1:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 5b4:	5f                   	pop    %rdi
 5b5:	66 61                	data16 (bad) 
 5b7:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 5be:	68 
 5bf:	61                   	(bad)  
 5c0:	72 00                	jb     5c2 <_init-0xa3e>
 5c2:	70 72                	jo     636 <_init-0x9ca>
 5c4:	69 6e 74 66 00 66 67 	imul   $0x67660066,0x74(%rsi),%ebp
 5cb:	65 74 63             	gs je  631 <_init-0x9cf>
 5ce:	00 73 74             	add    %dh,0x74(%rbx)
 5d1:	64 6f                	outsl  %fs:(%rsi),(%dx)
 5d3:	75 74                	jne    649 <_init-0x9b7>
 5d5:	00 66 63             	add    %ah,0x63(%rsi)
 5d8:	6c                   	insb   (%dx),%es:(%rdi)
 5d9:	6f                   	outsl  %ds:(%rsi),(%dx)
 5da:	73 65                	jae    641 <_init-0x9bf>
 5dc:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5df:	63 78 61             	movsxd 0x61(%rax),%edi
 5e2:	5f                   	pop    %rdi
 5e3:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5e9:	7a 65                	jp     650 <_init-0x9b0>
 5eb:	00 73 65             	add    %dh,0x65(%rbx)
 5ee:	74 76                	je     666 <_init-0x99a>
 5f0:	62 75 66 00 5f 5f 6c 	vmaxsh 0xd8(%rdi),%xmm19,%xmm11
 5f7:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5fe:	72 74                	jb     674 <_init-0x98c>
 600:	5f                   	pop    %rdi
 601:	6d                   	insl   (%dx),%es:(%rdi)
 602:	61                   	(bad)  
 603:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 60a:	43 5f                	rex.XB pop %r15
 60c:	32 2e                	xor    (%rsi),%ch
 60e:	37                   	(bad)  
 60f:	00 47 4c             	add    %al,0x4c(%rdi)
 612:	49                   	rex.WB
 613:	42                   	rex.X
 614:	43 5f                	rex.XB pop %r15
 616:	32 2e                	xor    (%rsi),%ch
 618:	34 00                	xor    $0x0,%al
 61a:	47                   	rex.RXB
 61b:	4c                   	rex.WR
 61c:	49                   	rex.WB
 61d:	42                   	rex.X
 61e:	43 5f                	rex.XB pop %r15
 620:	32 2e                	xor    (%rsi),%ch
 622:	32 2e                	xor    (%rsi),%ch
 624:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 629:	4d 5f                	rex.WRB pop %r15
 62b:	64 65 72 65          	fs gs jb 694 <_init-0x96c>
 62f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 636:	4d 
 637:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 639:	6f                   	outsl  %ds:(%rsi),(%dx)
 63a:	6e                   	outsb  %ds:(%rsi),(%dx)
 63b:	65 54                	gs push %rsp
 63d:	61                   	(bad)  
 63e:	62                   	(bad)  
 63f:	6c                   	insb   (%dx),%es:(%rdi)
 640:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 644:	67 6d                	insl   (%dx),%es:(%edi)
 646:	6f                   	outsl  %ds:(%rsi),(%dx)
 647:	6e                   	outsb  %ds:(%rsi),(%dx)
 648:	5f                   	pop    %rdi
 649:	73 74                	jae    6bf <_init-0x941>
 64b:	61                   	(bad)  
 64c:	72 74                	jb     6c2 <_init-0x93e>
 64e:	5f                   	pop    %rdi
 64f:	5f                   	pop    %rdi
 650:	00 5f 49             	add    %bl,0x49(%rdi)
 653:	54                   	push   %rsp
 654:	4d 5f                	rex.WRB pop %r15
 656:	72 65                	jb     6bd <_init-0x943>
 658:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 65f:	4d 
 660:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 662:	6f                   	outsl  %ds:(%rsi),(%dx)
 663:	6e                   	outsb  %ds:(%rsi),(%dx)
 664:	65 54                	gs push %rsp
 666:	61                   	(bad)  
 667:	62                   	.byte 0x62
 668:	6c                   	insb   (%dx),%es:(%rdi)
 669:	65                   	gs
	...

セクション .gnu.version の逆アセンブル:

000000000000066c <.gnu.version>:
 66c:	00 00                	add    %al,(%rax)
 66e:	02 00                	add    (%rax),%al
 670:	00 00                	add    %al,(%rax)
 672:	02 00                	add    (%rax),%al
 674:	02 00                	add    (%rax),%al
 676:	03 00                	add    (%rax),%eax
 678:	02 00                	add    (%rax),%al
 67a:	02 00                	add    (%rax),%al
 67c:	02 00                	add    (%rax),%al
 67e:	02 00                	add    (%rax),%al
 680:	00 00                	add    %al,(%rax)
 682:	02 00                	add    (%rax),%al
 684:	02 00                	add    (%rax),%al
 686:	04 00                	add    $0x0,%al
 688:	02 00                	add    (%rax),%al
 68a:	00 00                	add    %al,(%rax)
 68c:	02 00                	add    (%rax),%al
 68e:	02 00                	add    (%rax),%al

セクション .gnu.version_r の逆アセンブル:

0000000000000690 <.gnu.version_r>:
 690:	01 00                	add    %eax,(%rax)
 692:	03 00                	add    (%rax),%eax
 694:	01 00                	add    %eax,(%rax)
 696:	00 00                	add    %al,(%rax)
 698:	10 00                	adc    %al,(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	17                   	(bad)  
 6a1:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
 6a8:	8e 00                	mov    (%rax),%es
 6aa:	00 00                	add    %al,(%rax)
 6ac:	10 00                	adc    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	14 69                	adc    $0x69,%al
 6b2:	69 0d 00 00 03 00 98 	imul   $0x98,0x30000(%rip),%ecx        # 306bc <_end+0x2c69c>
 6b9:	00 00 00 
 6bc:	10 00                	adc    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	75 1a                	jne    6dc <_init-0x924>
 6c2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6c8:	a2                   	.byte 0xa2
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
	...

セクション .rela.dyn の逆アセンブル:

00000000000006d0 <.rela.dyn>:
 6d0:	68 3d 00 00 00       	push   $0x3d
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 08                	add    %cl,(%rax)
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 80 12 00 00 00    	add    %al,0x12(%rax)
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 70 3d             	add    %dh,0x3d(%rax)
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	08 00                	or     %al,(%rax)
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	40 12 00             	rex adc (%rax),%al
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 08                	add    %cl,(%rax)
 701:	40 00 00             	rex add %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	08 00                	or     %al,(%rax)
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	08 40 00             	or     %al,0x0(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 d8                	add    %bl,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 02                	add    %al,(%rdx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e0                	add    %ah,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 08                	add    %cl,(%rax)
	...
 745:	00 00                	add    %al,(%rax)
 747:	00 e8                	add    %ch,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 0a                	add    %cl,(%rdx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f0                	add    %dh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 0f                	add    %cl,(%rdi)
	...
 775:	00 00                	add    %al,(%rax)
 777:	00 f8                	add    %bh,%al
 779:	3f                   	(bad)  
 77a:	00 00                	add    %al,(%rax)
 77c:	00 00                	add    %al,(%rax)
 77e:	00 00                	add    %al,(%rax)
 780:	06                   	(bad)  
 781:	00 00                	add    %al,(%rax)
 783:	00 11                	add    %dl,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 10                	add    %dl,(%rax)
 791:	40 00 00             	rex add %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	05 00 00 00 10       	add    $0x10000000,%eax
	...

セクション .rela.plt の逆アセンブル:

00000000000007a8 <.rela.plt>:
 7a8:	80 3f 00             	cmpb   $0x0,(%rdi)
 7ab:	00 00                	add    %al,(%rax)
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 07                	add    %al,(%rdi)
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 01                	add    %al,(%rcx)
	...
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 88 3f 00 00 00    	add    %cl,0x3f(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 03                	add    %al,(%rbx)
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
 7dd:	00 00                	add    %al,(%rax)
 7df:	00 07                	add    %al,(%rdi)
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7ee:	00 00                	add    %al,(%rax)
 7f0:	98                   	cwtl   
 7f1:	3f                   	(bad)  
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 801 <_init-0x7ff>
 801:	00 00                	add    %al,(%rax)
 803:	00 00                	add    %al,(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
 80d:	00 00                	add    %al,(%rax)
 80f:	00 07                	add    %al,(%rdi)
 811:	00 00                	add    %al,(%rax)
 813:	00 06                	add    %al,(%rsi)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 07                	add    %al,(%rdi)
 829:	00 00                	add    %al,(%rax)
 82b:	00 07                	add    %al,(%rdi)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 83d:	00 00                	add    %al,(%rax)
 83f:	00 07                	add    %al,(%rdi)
 841:	00 00                	add    %al,(%rax)
 843:	00 09                	add    %cl,(%rcx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 855:	00 00                	add    %al,(%rax)
 857:	00 07                	add    %al,(%rdi)
 859:	00 00                	add    %al,(%rax)
 85b:	00 0b                	add    %cl,(%rbx)
	...
 865:	00 00                	add    %al,(%rax)
 867:	00 c0                	add    %al,%al
 869:	3f                   	(bad)  
 86a:	00 00                	add    %al,(%rax)
 86c:	00 00                	add    %al,(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	07                   	(bad)  
 871:	00 00                	add    %al,(%rax)
 873:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 87e:	00 00                	add    %al,(%rax)
 880:	c8 3f 00 00          	enter  $0x3f,$0x0
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 891 <_init-0x76f>
 891:	00 00                	add    %al,(%rax)
 893:	00 00                	add    %al,(%rax)
 895:	00 00                	add    %al,(%rax)
 897:	00 d0                	add    %dl,%al
 899:	3f                   	(bad)  
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 0e                	add    %cl,(%rsi)
	...

セクション .init の逆アセンブル:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

セクション .plt の逆アセンブル:

0000000000001020 <.plt>:
    1020:	ff 35 4a 2f 00 00    	push   0x2f4a(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 4b 2f 00 00 	bnd jmp *0x2f4b(%rip)        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <.plt>
    10df:	90                   	nop

セクション .plt.got の逆アセンブル:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 0d 2f 00 00 	bnd jmp *0x2f0d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

セクション .plt.sec の逆アセンブル:

00000000000010f0 <putchar@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3f80 <putchar@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <puts@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3f88 <puts@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <fclose@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3f90 <fclose@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3f98 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <printf@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3fa0 <printf@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <fgetc@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3fa8 <fgetc@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <signal@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3fb0 <signal@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <setvbuf@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 4d 2e 00 00 	bnd jmp *0x2e4d(%rip)        # 3fb8 <setvbuf@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <fopen@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 45 2e 00 00 	bnd jmp *0x2e45(%rip)        # 3fc0 <fopen@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <__isoc99_scanf@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <exit@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

セクション .text の逆アセンブル:

00000000000011a0 <_start>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	31 ed                	xor    %ebp,%ebp
    11a6:	49 89 d1             	mov    %rdx,%r9
    11a9:	5e                   	pop    %rsi
    11aa:	48 89 e2             	mov    %rsp,%rdx
    11ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11b1:	50                   	push   %rax
    11b2:	54                   	push   %rsp
    11b3:	4c 8d 05 c6 02 00 00 	lea    0x2c6(%rip),%r8        # 1480 <__libc_csu_fini>
    11ba:	48 8d 0d 4f 02 00 00 	lea    0x24f(%rip),%rcx        # 1410 <__libc_csu_init>
    11c1:	48 8d 3d 75 01 00 00 	lea    0x175(%rip),%rdi        # 133d <main>
    11c8:	ff 15 12 2e 00 00    	call   *0x2e12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    11ce:	f4                   	hlt    
    11cf:	90                   	nop

00000000000011d0 <deregister_tm_clones>:
    11d0:	48 8d 3d 39 2e 00 00 	lea    0x2e39(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    11d7:	48 8d 05 32 2e 00 00 	lea    0x2e32(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    11de:	48 39 f8             	cmp    %rdi,%rax
    11e1:	74 15                	je     11f8 <deregister_tm_clones+0x28>
    11e3:	48 8b 05 ee 2d 00 00 	mov    0x2dee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    11ea:	48 85 c0             	test   %rax,%rax
    11ed:	74 09                	je     11f8 <deregister_tm_clones+0x28>
    11ef:	ff e0                	jmp    *%rax
    11f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11f8:	c3                   	ret    
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <register_tm_clones>:
    1200:	48 8d 3d 09 2e 00 00 	lea    0x2e09(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    1207:	48 8d 35 02 2e 00 00 	lea    0x2e02(%rip),%rsi        # 4010 <stdout@GLIBC_2.2.5>
    120e:	48 29 fe             	sub    %rdi,%rsi
    1211:	48 89 f0             	mov    %rsi,%rax
    1214:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1218:	48 c1 f8 03          	sar    $0x3,%rax
    121c:	48 01 c6             	add    %rax,%rsi
    121f:	48 d1 fe             	sar    %rsi
    1222:	74 14                	je     1238 <register_tm_clones+0x38>
    1224:	48 8b 05 c5 2d 00 00 	mov    0x2dc5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    122b:	48 85 c0             	test   %rax,%rax
    122e:	74 08                	je     1238 <register_tm_clones+0x38>
    1230:	ff e0                	jmp    *%rax
    1232:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1238:	c3                   	ret    
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001240 <__do_global_dtors_aux>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	80 3d cd 2d 00 00 00 	cmpb   $0x0,0x2dcd(%rip)        # 4018 <completed.8061>
    124b:	75 2b                	jne    1278 <__do_global_dtors_aux+0x38>
    124d:	55                   	push   %rbp
    124e:	48 83 3d a2 2d 00 00 	cmpq   $0x0,0x2da2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1255:	00 
    1256:	48 89 e5             	mov    %rsp,%rbp
    1259:	74 0c                	je     1267 <__do_global_dtors_aux+0x27>
    125b:	48 8b 3d a6 2d 00 00 	mov    0x2da6(%rip),%rdi        # 4008 <__dso_handle>
    1262:	e8 79 fe ff ff       	call   10e0 <__cxa_finalize@plt>
    1267:	e8 64 ff ff ff       	call   11d0 <deregister_tm_clones>
    126c:	c6 05 a5 2d 00 00 01 	movb   $0x1,0x2da5(%rip)        # 4018 <completed.8061>
    1273:	5d                   	pop    %rbp
    1274:	c3                   	ret    
    1275:	0f 1f 00             	nopl   (%rax)
    1278:	c3                   	ret    
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <frame_dummy>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	e9 77 ff ff ff       	jmp    1200 <register_tm_clones>

0000000000001289 <segfault_handler>:
    1289:	f3 0f 1e fa          	endbr64 
    128d:	55                   	push   %rbp
    128e:	48 89 e5             	mov    %rsp,%rbp
    1291:	48 8d 3d 70 0d 00 00 	lea    0xd70(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1298:	e8 63 fe ff ff       	call   1100 <puts@plt>
    129d:	bf 00 00 00 00       	mov    $0x0,%edi
    12a2:	e8 e9 fe ff ff       	call   1190 <exit@plt>

00000000000012a7 <win>:
    12a7:	f3 0f 1e fa          	endbr64 
    12ab:	55                   	push   %rbp
    12ac:	48 89 e5             	mov    %rsp,%rbp
    12af:	48 83 ec 10          	sub    $0x10,%rsp
    12b3:	48 8d 3d 74 0d 00 00 	lea    0xd74(%rip),%rdi        # 202e <_IO_stdin_used+0x2e>
    12ba:	e8 41 fe ff ff       	call   1100 <puts@plt>
    12bf:	48 8d 35 71 0d 00 00 	lea    0xd71(%rip),%rsi        # 2037 <_IO_stdin_used+0x37>
    12c6:	48 8d 3d 6c 0d 00 00 	lea    0xd6c(%rip),%rdi        # 2039 <_IO_stdin_used+0x39>
    12cd:	e8 9e fe ff ff       	call   1170 <fopen@plt>
    12d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12d6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    12db:	75 16                	jne    12f3 <win+0x4c>
    12dd:	48 8d 3d 5e 0d 00 00 	lea    0xd5e(%rip),%rdi        # 2042 <_IO_stdin_used+0x42>
    12e4:	e8 17 fe ff ff       	call   1100 <puts@plt>
    12e9:	bf 00 00 00 00       	mov    $0x0,%edi
    12ee:	e8 9d fe ff ff       	call   1190 <exit@plt>
    12f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12f7:	48 89 c7             	mov    %rax,%rdi
    12fa:	e8 41 fe ff ff       	call   1140 <fgetc@plt>
    12ff:	88 45 f7             	mov    %al,-0x9(%rbp)
    1302:	eb 1a                	jmp    131e <win+0x77>
    1304:	0f be 45 f7          	movsbl -0x9(%rbp),%eax
    1308:	89 c7                	mov    %eax,%edi
    130a:	e8 e1 fd ff ff       	call   10f0 <putchar@plt>
    130f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1313:	48 89 c7             	mov    %rax,%rdi
    1316:	e8 25 fe ff ff       	call   1140 <fgetc@plt>
    131b:	88 45 f7             	mov    %al,-0x9(%rbp)
    131e:	80 7d f7 ff          	cmpb   $0xff,-0x9(%rbp)
    1322:	75 e0                	jne    1304 <win+0x5d>
    1324:	bf 0a 00 00 00       	mov    $0xa,%edi
    1329:	e8 c2 fd ff ff       	call   10f0 <putchar@plt>
    132e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1332:	48 89 c7             	mov    %rax,%rdi
    1335:	e8 d6 fd ff ff       	call   1110 <fclose@plt>
    133a:	90                   	nop
    133b:	c9                   	leave  
    133c:	c3                   	ret    

000000000000133d <main>:
    133d:	f3 0f 1e fa          	endbr64 
    1341:	55                   	push   %rbp
    1342:	48 89 e5             	mov    %rsp,%rbp
    1345:	48 83 ec 20          	sub    $0x20,%rsp
    1349:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1350:	00 00 
    1352:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1356:	31 c0                	xor    %eax,%eax
    1358:	48 8d 35 2a ff ff ff 	lea    -0xd6(%rip),%rsi        # 1289 <segfault_handler>
    135f:	bf 0b 00 00 00       	mov    $0xb,%edi
    1364:	e8 e7 fd ff ff       	call   1150 <signal@plt>
    1369:	48 8b 05 a0 2c 00 00 	mov    0x2ca0(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    1370:	b9 00 00 00 00       	mov    $0x0,%ecx
    1375:	ba 02 00 00 00       	mov    $0x2,%edx
    137a:	be 00 00 00 00       	mov    $0x0,%esi
    137f:	48 89 c7             	mov    %rax,%rdi
    1382:	e8 d9 fd ff ff       	call   1160 <setvbuf@plt>
    1387:	48 8d 35 af ff ff ff 	lea    -0x51(%rip),%rsi        # 133d <main>
    138e:	48 8d 3d bf 0c 00 00 	lea    0xcbf(%rip),%rdi        # 2054 <_IO_stdin_used+0x54>
    1395:	b8 00 00 00 00       	mov    $0x0,%eax
    139a:	e8 91 fd ff ff       	call   1130 <printf@plt>
    139f:	48 8d 3d ca 0c 00 00 	lea    0xcca(%rip),%rdi        # 2070 <_IO_stdin_used+0x70>
    13a6:	b8 00 00 00 00       	mov    $0x0,%eax
    13ab:	e8 80 fd ff ff       	call   1130 <printf@plt>
    13b0:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    13b4:	48 89 c6             	mov    %rax,%rsi
    13b7:	48 8d 3d e0 0c 00 00 	lea    0xce0(%rip),%rdi        # 209e <_IO_stdin_used+0x9e>
    13be:	b8 00 00 00 00       	mov    $0x0,%eax
    13c3:	e8 b8 fd ff ff       	call   1180 <__isoc99_scanf@plt>
    13c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13cc:	48 89 c6             	mov    %rax,%rsi
    13cf:	48 8d 3d cc 0c 00 00 	lea    0xccc(%rip),%rdi        # 20a2 <_IO_stdin_used+0xa2>
    13d6:	b8 00 00 00 00       	mov    $0x0,%eax
    13db:	e8 50 fd ff ff       	call   1130 <printf@plt>
    13e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13ec:	ff d0                	call   *%rax
    13ee:	b8 00 00 00 00       	mov    $0x0,%eax
    13f3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    13f7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    13fe:	00 00 
    1400:	74 05                	je     1407 <main+0xca>
    1402:	e8 19 fd ff ff       	call   1120 <__stack_chk_fail@plt>
    1407:	c9                   	leave  
    1408:	c3                   	ret    
    1409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001410 <__libc_csu_init>:
    1410:	f3 0f 1e fa          	endbr64 
    1414:	41 57                	push   %r15
    1416:	4c 8d 3d 4b 29 00 00 	lea    0x294b(%rip),%r15        # 3d68 <__frame_dummy_init_array_entry>
    141d:	41 56                	push   %r14
    141f:	49 89 d6             	mov    %rdx,%r14
    1422:	41 55                	push   %r13
    1424:	49 89 f5             	mov    %rsi,%r13
    1427:	41 54                	push   %r12
    1429:	41 89 fc             	mov    %edi,%r12d
    142c:	55                   	push   %rbp
    142d:	48 8d 2d 3c 29 00 00 	lea    0x293c(%rip),%rbp        # 3d70 <__do_global_dtors_aux_fini_array_entry>
    1434:	53                   	push   %rbx
    1435:	4c 29 fd             	sub    %r15,%rbp
    1438:	48 83 ec 08          	sub    $0x8,%rsp
    143c:	e8 bf fb ff ff       	call   1000 <_init>
    1441:	48 c1 fd 03          	sar    $0x3,%rbp
    1445:	74 1f                	je     1466 <__libc_csu_init+0x56>
    1447:	31 db                	xor    %ebx,%ebx
    1449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1450:	4c 89 f2             	mov    %r14,%rdx
    1453:	4c 89 ee             	mov    %r13,%rsi
    1456:	44 89 e7             	mov    %r12d,%edi
    1459:	41 ff 14 df          	call   *(%r15,%rbx,8)
    145d:	48 83 c3 01          	add    $0x1,%rbx
    1461:	48 39 dd             	cmp    %rbx,%rbp
    1464:	75 ea                	jne    1450 <__libc_csu_init+0x40>
    1466:	48 83 c4 08          	add    $0x8,%rsp
    146a:	5b                   	pop    %rbx
    146b:	5d                   	pop    %rbp
    146c:	41 5c                	pop    %r12
    146e:	41 5d                	pop    %r13
    1470:	41 5e                	pop    %r14
    1472:	41 5f                	pop    %r15
    1474:	c3                   	ret    
    1475:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    147c:	00 00 00 00 

0000000000001480 <__libc_csu_fini>:
    1480:	f3 0f 1e fa          	endbr64 
    1484:	c3                   	ret    

セクション .fini の逆アセンブル:

0000000000001488 <_fini>:
    1488:	f3 0f 1e fa          	endbr64 
    148c:	48 83 ec 08          	sub    $0x8,%rsp
    1490:	48 83 c4 08          	add    $0x8,%rsp
    1494:	c3                   	ret    

セクション .rodata の逆アセンブル:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	53                   	push   %rbx
    2009:	65 67 66 61          	gs addr32 data16 (bad) 
    200d:	75 6c                	jne    207b <_IO_stdin_used+0x7b>
    200f:	74 20                	je     2031 <_IO_stdin_used+0x31>
    2011:	4f 63 63 75          	rex.WRXB movslq 0x75(%r11),%r12
    2015:	72 72                	jb     2089 <_IO_stdin_used+0x89>
    2017:	65 64 2c 20          	gs fs sub $0x20,%al
    201b:	69 6e 63 6f 72 72 65 	imul   $0x6572726f,0x63(%rsi),%ebp
    2022:	63 74 20 61          	movsxd 0x61(%rax,%riz,1),%esi
    2026:	64 64 72 65          	fs fs jb 208f <_IO_stdin_used+0x8f>
    202a:	73 73                	jae    209f <_IO_stdin_used+0x9f>
    202c:	2e 00 59 6f          	cs add %bl,0x6f(%rcx)
    2030:	75 20                	jne    2052 <_IO_stdin_used+0x52>
    2032:	77 6f                	ja     20a3 <_IO_stdin_used+0xa3>
    2034:	6e                   	outsb  %ds:(%rsi),(%dx)
    2035:	21 00                	and    %eax,(%rax)
    2037:	72 00                	jb     2039 <_IO_stdin_used+0x39>
    2039:	66 6c                	data16 insb (%dx),%es:(%rdi)
    203b:	61                   	(bad)  
    203c:	67 2e 74 78          	addr32 je,pn 20b8 <__GNU_EH_FRAME_HDR+0x4>
    2040:	74 00                	je     2042 <_IO_stdin_used+0x42>
    2042:	43 61                	rex.XB (bad) 
    2044:	6e                   	outsb  %ds:(%rsi),(%dx)
    2045:	6e                   	outsb  %ds:(%rsi),(%dx)
    2046:	6f                   	outsl  %ds:(%rsi),(%dx)
    2047:	74 20                	je     2069 <_IO_stdin_used+0x69>
    2049:	6f                   	outsl  %ds:(%rsi),(%dx)
    204a:	70 65                	jo     20b1 <_IO_stdin_used+0xb1>
    204c:	6e                   	outsb  %ds:(%rsi),(%dx)
    204d:	20 66 69             	and    %ah,0x69(%rsi)
    2050:	6c                   	insb   (%dx),%es:(%rdi)
    2051:	65 2e 00 41 64       	gs add %al,%gs:0x64(%rcx)
    2056:	64 72 65             	fs jb  20be <__GNU_EH_FRAME_HDR+0xa>
    2059:	73 73                	jae    20ce <__GNU_EH_FRAME_HDR+0x1a>
    205b:	20 6f 66             	and    %ch,0x66(%rdi)
    205e:	20 6d 61             	and    %ch,0x61(%rbp)
    2061:	69 6e 3a 20 25 70 0a 	imul   $0xa702520,0x3a(%rsi),%ebp
	...
    2070:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
    2072:	74 65                	je     20d9 <__GNU_EH_FRAME_HDR+0x25>
    2074:	72 20                	jb     2096 <_IO_stdin_used+0x96>
    2076:	74 68                	je     20e0 <__GNU_EH_FRAME_HDR+0x2c>
    2078:	65 20 61 64          	and    %ah,%gs:0x64(%rcx)
    207c:	64 72 65             	fs jb  20e4 <__GNU_EH_FRAME_HDR+0x30>
    207f:	73 73                	jae    20f4 <__GNU_EH_FRAME_HDR+0x40>
    2081:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
    2085:	6a 75                	push   $0x75
    2087:	6d                   	insl   (%dx),%es:(%rdi)
    2088:	70 20                	jo     20aa <_IO_stdin_used+0xaa>
    208a:	74 6f                	je     20fb <__GNU_EH_FRAME_HDR+0x47>
    208c:	2c 20                	sub    $0x20,%al
    208e:	65 78 20             	gs js  20b1 <_IO_stdin_used+0xb1>
    2091:	3d 3e 20 30 78       	cmp    $0x7830203e,%eax
    2096:	31 32                	xor    %esi,(%rdx)
    2098:	33 34 35 3a 20 00 25 	xor    0x2500203a(,%rsi,1),%esi
    209f:	6c                   	insb   (%dx),%es:(%rdi)
    20a0:	78 00                	js     20a2 <_IO_stdin_used+0xa2>
    20a2:	59                   	pop    %rcx
    20a3:	6f                   	outsl  %ds:(%rsi),(%dx)
    20a4:	75 72                	jne    2118 <__GNU_EH_FRAME_HDR+0x64>
    20a6:	20 69 6e             	and    %ch,0x6e(%rcx)
    20a9:	70 75                	jo     2120 <__GNU_EH_FRAME_HDR+0x6c>
    20ab:	74 3a                	je     20e7 <__GNU_EH_FRAME_HDR+0x33>
    20ad:	20 25 6c 78 0a 00    	and    %ah,0xa786c(%rip)        # a991f <_end+0xa58ff>

セクション .eh_frame_hdr の逆アセンブル:

00000000000020b4 <__GNU_EH_FRAME_HDR>:
    20b4:	01 1b                	add    %ebx,(%rbx)
    20b6:	03 3b                	add    (%rbx),%edi
    20b8:	50                   	push   %rax
    20b9:	00 00                	add    %al,(%rax)
    20bb:	00 09                	add    %cl,(%rcx)
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 6c ef ff          	add    %ch,-0x1(%rdi,%rbp,8)
    20c3:	ff 84 00 00 00 2c f0 	incl   -0xfd40000(%rax,%rax,1)
    20ca:	ff                   	(bad)  
    20cb:	ff ac 00 00 00 3c f0 	ljmp   *-0xfc40000(%rax,%rax,1)
    20d2:	ff                   	(bad)  
    20d3:	ff c4                	inc    %esp
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 ec                	add    %ch,%ah
    20d9:	f0 ff                	lock (bad) 
    20db:	ff 6c 00 00          	ljmp   *0x0(%rax,%rax,1)
    20df:	00 d5                	add    %dl,%ch
    20e1:	f1                   	int1   
    20e2:	ff                   	(bad)  
    20e3:	ff                   	(bad)  
    20e4:	dc 00                	faddl  (%rax)
    20e6:	00 00                	add    %al,(%rax)
    20e8:	f3 f1                	repz int1 
    20ea:	ff                   	(bad)  
    20eb:	ff                   	(bad)  
    20ec:	f8                   	clc    
    20ed:	00 00                	add    %al,(%rax)
    20ef:	00 89 f2 ff ff 18    	add    %cl,0x18fffff2(%rcx)
    20f5:	01 00                	add    %eax,(%rax)
    20f7:	00 5c f3 ff          	add    %bl,-0x1(%rbx,%rsi,8)
    20fb:	ff                   	(bad)  
    20fc:	3c 01                	cmp    $0x1,%al
    20fe:	00 00                	add    %al,(%rax)
    2100:	cc                   	int3   
    2101:	f3 ff                	repz (bad) 
    2103:	ff                   	.byte 0xff
    2104:	84 01                	test   %al,(%rcx)
	...

セクション .eh_frame の逆アセンブル:

0000000000002108 <__FRAME_END__-0x144>:
    2108:	14 00                	adc    $0x0,%al
    210a:	00 00                	add    %al,(%rax)
    210c:	00 00                	add    %al,(%rax)
    210e:	00 00                	add    %al,(%rax)
    2110:	01 7a 52             	add    %edi,0x52(%rdx)
    2113:	00 01                	add    %al,(%rcx)
    2115:	78 10                	js     2127 <__GNU_EH_FRAME_HDR+0x73>
    2117:	01 1b                	add    %ebx,(%rbx)
    2119:	0c 07                	or     $0x7,%al
    211b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2121:	00 00                	add    %al,(%rax)
    2123:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2126:	00 00                	add    %al,(%rax)
    2128:	78 f0                	js     211a <__GNU_EH_FRAME_HDR+0x66>
    212a:	ff                   	(bad)  
    212b:	ff 2f                	ljmp   *(%rdi)
    212d:	00 00                	add    %al,(%rax)
    212f:	00 00                	add    %al,(%rax)
    2131:	44 07                	rex.R (bad) 
    2133:	10 00                	adc    %al,(%rax)
    2135:	00 00                	add    %al,(%rax)
    2137:	00 24 00             	add    %ah,(%rax,%rax,1)
    213a:	00 00                	add    %al,(%rax)
    213c:	34 00                	xor    $0x0,%al
    213e:	00 00                	add    %al,(%rax)
    2140:	e0 ee                	loopne 2130 <__GNU_EH_FRAME_HDR+0x7c>
    2142:	ff                   	(bad)  
    2143:	ff c0                	inc    %eax
    2145:	00 00                	add    %al,(%rax)
    2147:	00 00                	add    %al,(%rax)
    2149:	0e                   	(bad)  
    214a:	10 46 0e             	adc    %al,0xe(%rsi)
    214d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2150:	0b 77 08             	or     0x8(%rdi),%esi
    2153:	80 00 3f             	addb   $0x3f,(%rax)
    2156:	1a 3a                	sbb    (%rdx),%bh
    2158:	2a 33                	sub    (%rbx),%dh
    215a:	24 22                	and    $0x22,%al
    215c:	00 00                	add    %al,(%rax)
    215e:	00 00                	add    %al,(%rax)
    2160:	14 00                	adc    $0x0,%al
    2162:	00 00                	add    %al,(%rax)
    2164:	5c                   	pop    %rsp
    2165:	00 00                	add    %al,(%rax)
    2167:	00 78 ef             	add    %bh,-0x11(%rax)
    216a:	ff                   	(bad)  
    216b:	ff 10                	call   *(%rax)
	...
    2175:	00 00                	add    %al,(%rax)
    2177:	00 14 00             	add    %dl,(%rax,%rax,1)
    217a:	00 00                	add    %al,(%rax)
    217c:	74 00                	je     217e <__GNU_EH_FRAME_HDR+0xca>
    217e:	00 00                	add    %al,(%rax)
    2180:	70 ef                	jo     2171 <__GNU_EH_FRAME_HDR+0xbd>
    2182:	ff                   	(bad)  
    2183:	ff b0 00 00 00 00    	push   0x0(%rax)
    2189:	00 00                	add    %al,(%rax)
    218b:	00 00                	add    %al,(%rax)
    218d:	00 00                	add    %al,(%rax)
    218f:	00 18                	add    %bl,(%rax)
    2191:	00 00                	add    %al,(%rax)
    2193:	00 8c 00 00 00 f1 f0 	add    %cl,-0xf0f0000(%rax,%rax,1)
    219a:	ff                   	(bad)  
    219b:	ff 1e                	lcall  *(%rsi)
    219d:	00 00                	add    %al,(%rax)
    219f:	00 00                	add    %al,(%rax)
    21a1:	45 0e                	rex.RB (bad) 
    21a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21a9:	00 00                	add    %al,(%rax)
    21ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21ae:	00 00                	add    %al,(%rax)
    21b0:	a8 00                	test   $0x0,%al
    21b2:	00 00                	add    %al,(%rax)
    21b4:	f3 f0 ff             	repz lock (bad) 
    21b7:	ff 96 00 00 00 00    	call   *0x0(%rsi)
    21bd:	45 0e                	rex.RB (bad) 
    21bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21c5:	02 8d 0c 07 08 00    	add    0x8070c(%rbp),%cl
    21cb:	00 20                	add    %ah,(%rax)
    21cd:	00 00                	add    %al,(%rax)
    21cf:	00 c8                	add    %cl,%al
    21d1:	00 00                	add    %al,(%rax)
    21d3:	00 69 f1             	add    %ch,-0xf(%rcx)
    21d6:	ff                   	(bad)  
    21d7:	ff cc                	dec    %esp
    21d9:	00 00                	add    %al,(%rax)
    21db:	00 00                	add    %al,(%rax)
    21dd:	45 0e                	rex.RB (bad) 
    21df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21e5:	02 c3                	add    %bl,%al
    21e7:	0c 07                	or     $0x7,%al
    21e9:	08 00                	or     %al,(%rax)
    21eb:	00 00                	add    %al,(%rax)
    21ed:	00 00                	add    %al,(%rax)
    21ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    21f3:	00 ec                	add    %ch,%ah
    21f5:	00 00                	add    %al,(%rax)
    21f7:	00 18                	add    %bl,(%rax)
    21f9:	f2 ff                	repnz (bad) 
    21fb:	ff 65 00             	jmp    *0x0(%rbp)
    21fe:	00 00                	add    %al,(%rax)
    2200:	00 46 0e             	add    %al,0xe(%rsi)
    2203:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2209:	8e 03                	mov    (%rbx),%es
    220b:	45 0e                	rex.RB (bad) 
    220d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2213:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630305d <_end+0xffffffff862ff03d>
    2219:	06                   	(bad)  
    221a:	48 0e                	rex.W (bad) 
    221c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2222:	6e                   	outsb  %ds:(%rsi),(%dx)
    2223:	0e                   	(bad)  
    2224:	38 41 0e             	cmp    %al,0xe(%rcx)
    2227:	30 41 0e             	xor    %al,0xe(%rcx)
    222a:	28 42 0e             	sub    %al,0xe(%rdx)
    222d:	20 42 0e             	and    %al,0xe(%rdx)
    2230:	18 42 0e             	sbb    %al,0xe(%rdx)
    2233:	10 42 0e             	adc    %al,0xe(%rdx)
    2236:	08 00                	or     %al,(%rax)
    2238:	10 00                	adc    %al,(%rax)
    223a:	00 00                	add    %al,(%rax)
    223c:	34 01                	xor    $0x1,%al
    223e:	00 00                	add    %al,(%rax)
    2240:	40                   	rex
    2241:	f2 ff                	repnz (bad) 
    2243:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2249 <__GNU_EH_FRAME_HDR+0x195>
    2249:	00 00                	add    %al,(%rax)
	...

000000000000224c <__FRAME_END__>:
    224c:	00 00                	add    %al,(%rax)
	...

セクション .init_array の逆アセンブル:

0000000000003d68 <__frame_dummy_init_array_entry>:
    3d68:	80 12 00             	adcb   $0x0,(%rdx)
    3d6b:	00 00                	add    %al,(%rax)
    3d6d:	00 00                	add    %al,(%rax)
	...

セクション .fini_array の逆アセンブル:

0000000000003d70 <__do_global_dtors_aux_fini_array_entry>:
    3d70:	40 12 00             	rex adc (%rax),%al
    3d73:	00 00                	add    %al,(%rax)
    3d75:	00 00                	add    %al,(%rax)
	...

セクション .dynamic の逆アセンブル:

0000000000003d78 <_DYNAMIC>:
    3d78:	01 00                	add    %eax,(%rax)
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
    3d7e:	00 00                	add    %al,(%rax)
    3d80:	01 00                	add    %eax,(%rax)
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
    3d86:	00 00                	add    %al,(%rax)
    3d88:	0c 00                	or     $0x0,%al
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	00 10                	add    %dl,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	0d 00 00 00 00       	or     $0x0,%eax
    3d9d:	00 00                	add    %al,(%rax)
    3d9f:	00 88 14 00 00 00    	add    %cl,0x14(%rax)
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 19                	add    %bl,(%rcx)
    3da9:	00 00                	add    %al,(%rax)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
    3daf:	00 68 3d             	add    %ch,0x3d(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	1b 00                	sbb    (%rax),%eax
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	08 00                	or     %al,(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	1a 00                	sbb    (%rax),%al
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	70 3d                	jo     3e0f <_DYNAMIC+0x97>
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	1c 00                	sbb    $0x0,%al
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	08 00                	or     %al,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	f5                   	cmc    
    3de9:	fe                   	(bad)  
    3dea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3dfd <_DYNAMIC+0x85>
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 78 05             	add    %bh,0x5(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	06                   	(bad)  
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 c8                	add    %cl,%al
    3e11:	03 00                	add    (%rax),%eax
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 0a                	add    %cl,(%rdx)
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 f3                	add    %dh,%bl
    3e21:	00 00                	add    %al,(%rax)
    3e23:	00 00                	add    %al,(%rax)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 0b                	add    %cl,(%rbx)
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 18                	add    %bl,(%rax)
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e3d <_DYNAMIC+0xc5>
	...
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 03                	add    %al,(%rbx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 68 3f             	add    %ch,0x3f(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	02 00                	add    (%rax),%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 01                	or     %al,(%rcx)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	14 00                	adc    $0x0,%al
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	07                   	(bad)  
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 17                	add    %dl,(%rdi)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 a8 07 00 00 00    	add    %ch,0x7(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 07                	add    %al,(%rdi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 d0                	add    %dl,%al
    3e91:	06                   	(bad)  
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	08 00                	or     %al,(%rax)
    3e9a:	00 00                	add    %al,(%rax)
    3e9c:	00 00                	add    %al,(%rax)
    3e9e:	00 00                	add    %al,(%rax)
    3ea0:	d8 00                	fadds  (%rax)
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	09 00                	or     %eax,(%rax)
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	18 00                	sbb    %al,(%rax)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	1e                   	(bad)  
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 08                	add    %cl,(%rax)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 fb                	add    %bh,%bl
    3ec9:	ff                   	(bad)  
    3eca:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 01                	add    %al,(%rcx)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	08 00                	or     %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 fe                	add    %bh,%dh
    3ed9:	ff                   	(bad)  
    3eda:	ff 6f 00             	ljmp   *0x0(%rdi)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 90 06 00 00 00    	add    %dl,0x6(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 ff                	add    %bh,%bh
    3ee9:	ff                   	(bad)  
    3eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 01                	add    %al,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 f0                	add    %dh,%al
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 6c 06 00          	add    %ch,0x0(%rsi,%rax,1)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 f9                	add    %bh,%cl
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 03                	add    %al,(%rbx)
	...

セクション .got の逆アセンブル:

0000000000003f68 <_GLOBAL_OFFSET_TABLE_>:
    3f68:	78 3d                	js     3fa7 <_GLOBAL_OFFSET_TABLE_+0x3f>
	...
    3f7e:	00 00                	add    %al,(%rax)
    3f80:	30 10                	xor    %dl,(%rax)
    3f82:	00 00                	add    %al,(%rax)
    3f84:	00 00                	add    %al,(%rax)
    3f86:	00 00                	add    %al,(%rax)
    3f88:	40 10 00             	rex adc %al,(%rax)
    3f8b:	00 00                	add    %al,(%rax)
    3f8d:	00 00                	add    %al,(%rax)
    3f8f:	00 50 10             	add    %dl,0x10(%rax)
    3f92:	00 00                	add    %al,(%rax)
    3f94:	00 00                	add    %al,(%rax)
    3f96:	00 00                	add    %al,(%rax)
    3f98:	60                   	(bad)  
    3f99:	10 00                	adc    %al,(%rax)
    3f9b:	00 00                	add    %al,(%rax)
    3f9d:	00 00                	add    %al,(%rax)
    3f9f:	00 70 10             	add    %dh,0x10(%rax)
    3fa2:	00 00                	add    %al,(%rax)
    3fa4:	00 00                	add    %al,(%rax)
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	80 10 00             	adcb   $0x0,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 c0                	add    %al,%al
    3fc9:	10 00                	adc    %al,(%rax)
    3fcb:	00 00                	add    %al,(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 d0                	add    %dl,%al
    3fd1:	10 00                	adc    %al,(%rax)
	...

セクション .data の逆アセンブル:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

セクション .bss の逆アセンブル:

0000000000004010 <stdout@@GLIBC_2.2.5>:
	...

0000000000004018 <completed.8061>:
	...

セクション .comment の逆アセンブル:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75623528>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0xf71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	32 29                	xor    (%rcx),%ch
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
